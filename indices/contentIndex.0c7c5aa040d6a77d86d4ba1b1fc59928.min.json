{"/":{"title":"Digital Garden","content":"\n## What's this?\n\nA [Second Brain](/Second%20Brain.md) by me started in 2022. Using [Obsidian](https://obsidian.md/) \u0026 [Quartz](https://quartz.jzhao.xyz), all the notes are backup using iCloud Drive \u0026 [Github](https://github.com/narze/second-brain). I plan to create my own static site builder using SvelteKit, too.\n\nThis will be the one of my [Outlets](/Outlets.md)\n\n## Start Here\n- [Second Brain](Second%20Brain.md)\n- [Wishlist](Wishlist.md)\n- [Uses](Uses.md)\n- [PARA](PARA%20Method.md)\n\t- [Projects](/1-projects/)\n\t- [Areas](/2-areas/)\n\t- [Resources](/3-resources/)\n\t- [Archives](/4-archives/)\n\n## Webring\n\nThis website is a part of the [\"วงแหวนเว็บ\" (Thai Webring)](https://webring.wonderful.software#garden.narze.live)","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/%23100DaysOfCode":{"title":"#100DaysOfCode","content":"\nI hated frontend development.\n\nI mainly make backends for websites. My last project which I also do the frontend is like 5 years ago. The knowledge I had on frontend is long outdated (jQuery, React 0.12-ish, Angular 1.) As a Ruby developer which rely heavily on testing, I also thought that frontend code is less useful to add tests since you can just refresh the page to see the changed code. Furthermore, my CSS skill is non-existent (still struggle just to center HTML elements.) So I used this [#100DaysOfCode](https://www.100daysofcode.com/) challenge to re-learn my frontend coding skill from scratch.\n\n#100DaysOfCode is the challenge where you code (or learn to code) every day for 100 days. I used my free time after work at least 30 minutes to create websites, then learn new techniques \u0026 frameworks along the way.\n\nIn the course of 100 days, I've learned and tried many frameworks such as React.js (version 16), Vue.js 3, Svelte, Alpine.js, Next.js, Nuxt.js, Gatsby.js, and many more. I also created some reusable templates like [Next.js boilerplate](https://github.com/narze/thank-u-nextjs) which included many modern libraries I like.\n\nAfter I've rebuilt [toSkoy](https://github.com/narze/toSkoy) project which was nearly 5 years old in the 100th day. I gave a talk about this challenge \u0026 how to succeed it at [Bkk.js #14 meetup](https://www.eventpop.me/e/9622) ([Slides](https://bit.ly/bkkjs14bf100))\n\nI'm so proud of myself for completing this challenge. It really changed my life to be a better web developer.\n\nSee [my #100DaysOfCode website](https://100.narze.vercel.app/) (built with Gatsby.js)\n\nNext I'll take on [100 Days of Writing](100%20Days%20of%20Writing.md)","lastmodified":"2022-08-21T10:49:56.509159685Z","tags":null},"/1-Projects/tech-long-didnt-read/":{"title":"Tech Long; Didn't Read","content":"\n## Origin - My [fb post](https://www.facebook.com/narze/posts/pfbid0nakzVNduyoocPovaD3xcbAva7Stt8n3D5JuYmYqb555u7t6jbNeTjF6131mLQ8RAl)\n```text\nกำลังจะทำ [#TechLongDidntRead](https://www.facebook.com/hashtag/techlongdidntread?__eep__=6\u0026__cft__[0]=AZVHgqoG9bpkLi0503fJqTPFbjpUEtY3cJ-2MXj2TocTvVf4MABXj7cl6ll5uSky-BJYRj7Eak9sE0XHl_yinEkGANkUoKS29hC24gKXDC8Aufl0ATuw_mXXpEJ-wJmGHdQ_wCOx4Jp2Dmc93p1fPHXD\u0026__tn__=*NK-R) ที่จะสรุปบทความและวิดิโอสาย Tech / Dev ที่ดองไว้เยอะมากใน Reading list เป็นภาษาไทย\n\nส่วนนึงก็เพื่อบังคับให้ตัวเองอ่านด้วย หวังว่าจะทำให้ได้อาทิตย์ละ 3-5 บทความ\n\nตอนนี้คงโพสเป็น Public ที่นี่ไปก่อน ถ้าไปรอดค่อยเปิดเพจหรือหน้าเว็บ (แต่ก็ไม่ค่อยอยากเปิดเพจเพราะอีมาร์คมันไม่น่าให้ Reach เราเยอะ)\n```\n","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/1-Projects/tech-long-didnt-read/Choose-Boring-Technology":{"title":"Choose Boring Technology","content":"\nsrc: https://boringtechnology.club\n\n![](Images/Cover%20-%20Choose%20Boring%20Technology.png)\n\n## Summary\n- The answer of \"How do you make devs happy?\" for many developers: Chase shiny objects\n- Imagine you have \"Innovation Tokens\" to use for building new things, and you have 3 tokens to use. With limited resources it will make less sense to innovate within new databases or new programming paradigms (NodeJS, MongoDB at that point of time) instead of the features or company missions.\n- On new, shiny technologies there will be more \"Unknown Unknowns\" than the old, boring technology.\n- Boring tech's failures are already well-understood\n- The tech combination also matters, e.g. Ruby is pretty much the same as Python, but Redis != Memcached  \n- When choosing new tech (like Cassandra for database), make sure that the short-term benefits exceeds than the long-term costs of operating it. But most of the time, it doesn't.\n- Make a mapping between problems and technologies to solve them, using same technology to solve more than one problem will reduce the cost while retaining same benefit.\n- From the cost function: `total_cost = sum(maintenance_cost) - sum(velocity_benefit)`. If cost per tech is cheap, you can use many different techs. If each tech is expensive, pick few techs and share more problems per tech.\n- Also having many techs will discards synergies when everyone is using shared tech\n- In reality, new tech choices are expensive and the maintenance cost will dominate the velocity benefit, since operating tech on production is hard, there are many things to worry about for setting up \u0026 maintaining new tech on production.\n- When to use exciting new tech\n  - Communicate more, ask how you would solve the problem with the existing stack\n  - Find low-risk ways to get started\n  - Commit to removing the old, redundant system\n- Use proven tech, choose a few globally optimal tech, master the tech, ship stuff\n- Worry about the big picture (the product) more than the database to pick\n\n## Summary (Thai)\n- คำถาม: ทำยังไงให้ Developer มีความสุข คำตอบ: ให้เค้าเลือก Technology ที่จะใช้เอง เช่น โปรเจกต์ใหม่เขียนด้วย Clojure กันเถอะ (ในบทความใช้วลี \"Chase shiny objects\") ซึ่งหลายครั้งจะเกิดปัญหาตามมา\n- วิธีแก้ปัญหา: ให้ลองคิดดูว่าเรามี Innovation Tokens แค่ 3 เหรียญในการใช้สร้าง Product ใหม่ ปรากฏว่าแค่ทำ Feature นึงก็ใช้ Token นึงแล้ว การใช้ Token เพียงเพื่อจะลอง Tech ใหม่ๆ จะดูไม่ค่อย Make Sense (เช่นเลือกภาษาใหม่ หรือใช้ Database ที่เราไม่เคยใช้)\n- การเลือก Tech ใหม่มักจะมี \"Unknown Unknowns\" หรือสิ่งที่เราไม่รู้ ว่าเราไม่รู้ อยู่มาก อย่างเช่นบั๊กที่ยังไม่ค่อยมีคนเจอแล้วการแก้คือต้องไปงมกับมันเป็นเดือนๆ\n- Tech เก่าๆ จะมี Unknowns น้อยกว่า เพราะมันจะมีคนที่เจอปัญหาและมักจะแก้ไขมันไปแล้ว\n- เวลาเลือก Tech ใหม่ๆ ต้องมั่นใจว่า Velocity Benefit หรือประโยชน์จากความสะดวกของการใช้ Tech ที่จะได้ในระยะสั้น คุ้มค่ากับการ Maintenance ในระยะยาว ซึ่งแทบทุกครั้ง มันไม่คุ้ม\n- ลองทำ Mapping ระหว่าง Problems และ Technologies ที่ใช้แก้ปัญหา ถ้าเราใช้ Tech เดียวกันในการแก้ได้หลายปัญหา จะลด Maintenance Cost ในการใช้แต่ละ Technology ได้\n- จากสูตร `total_cost = sum(maintenance_cost) - sum(velocity_benefit)` ถ้า Maintenance Cost แต่ละอย่างไม่สูง เราสามารถเลือกใช้ Technology ได้หลายอย่าง แต่ถ้า Maintenance Cost สูง ก็ควรที่จะเลือก Technology น้อยอย่างลง แล้วให้แต่ละ Technology แก้ปัญหา Problem หลายอย่างขึ้น\n- แต่ในความเป็นจริง Maintenance Cost จะสูงเสมอ เพราะการนำ Tech ขึ้น Production จะมีปัญหาอื่นอีกเยอะ เช่น Deployment, Scaling, Metrics, Logging และอีกมากมาย\n- แล้วเมื่อไหร่ถึงจะได้ใช้?\n  - คุยกันเยอะๆ ตั้งคำถามว่าถ้ายังใช้ Tech Stack เดิมจะแก้ปัญหาได้ไหม อย่างไร\n  - หาวิธีที่มีความเสี่ยงต่ำในการใช้ เช่นทำ PoC เพื่อทดลองและเพิ่มความมั่นใจในการใช้ Tech นั้น\n  - ต้องตั้งใจหาทางนำ Tech เก่าที่ซ้ำซ้อนออกด้วย ไม่เช่นนั้นจะต้อง Maintain ทั้งคู่เพราะทิ้งของเก่าไม่ได้\n- ฉะนั้น ใช้ Tech ที่พิสูจน์ตัวเองมาแล้ว เลือกให้ดี ใช้ให้เชี่ยวชาญ\n- นึกถึงภาพรวมของ Product ให้มากกว่าแค่มาเลือกกันว่าใช้ Tech เช่น Database ตัวไหนดี\n- \"Happiness comes from shipping meaningful work.\"\n\n## TLDR\nPrefer proven technology even if it is boring.","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/1-Projects/tech-long-didnt-read/How-I-Focus-While-Coding":{"title":"How I Focus While Coding","content":"\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/H68Iqm6c36U\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\n[Source](https://www.youtube.com/watch?v=H68Iqm6c36U)\n\n- Many people recommend time boxing methods like Pomodoro Technique: 25m work followed by 5m break.\n- But it doesn't work well with coding (at least for him), where your train of thoughts or flow state will be lost every 25 minutes and you have to start all over again.\n- Just sit down and start coding 4hr, although it is not easy.\n- Remove all distractions: phone, notifications, email, Slack, additional monitors that often are used for leisure apps.\n- Plan the work at the end of the day before.\n- Choose 1-2 top priority task, schedule those in optimal time frame (morning, afternoon, or evening)\n- Force yourself to start, and then go with the flow state.\n- No 1-size fit all solution, try if it works or not.\n- Be healthy: exercise, sleep well, drink water.","lastmodified":"2022-08-21T10:49:57.077163634Z","tags":null},"/1-Projects/tech-long-didnt-read/How-to-learn-hard-things-in-tech":{"title":"How to learn hard things in tech","content":"\n![](Images/Cover%20-%20How%20to%20learn%20hard%20things%20in%20tech.png)\n\n[Source](https://technicallychallenged.substack.com/p/how-to-learn-hard-things-in-tech)\n\n## Summary\nDon't know where to start on new/hard tech? Build.\n1. Find the example, use it as the baseline for building\n2. Modify, see results\n3. If it doesn't work, read or watch someone explain it\n4. Repeat\nForce yourself to do 1. and 2. first (Starting with 3. is easier but won't make you much stronger)\n\n## Summary (Thai)\nเมื่อเจอกับสิ่งใหม่ๆ หรือยากๆ (Technology, Software, Tools, ฯลฯ) ไม่รู้จะเริ่มเรียนจากไหนก่อน? ให้ลองใช้มันสร้างอะไรขึ้นมาสักอย่าง\n1. หาตัวอย่างโค้ด จากเว็บไซต์ บล็อก หรือ Document แล้วยึดเป็นจุดเริ่มต้น\n2. ทดลองแก้ไข แล้วดูผลลัพท์ที่เกิดขึ้น ว่าทำในสิ่งที่เราต้องการหรือเปล่า\n3. ถ้าไม่ได้เป็นไปตามที่คิด ค่อยอ่านเพิ่มเติม หรือว่าดูคนอื่นทำผ่าน Tutorial หรือ Walkthrough\n4. ทำ 1-3 ซ้ำไปเรื่อยๆ\nบังคับให้ตัวเองทำข้อ 1. และ 2. ก่อน (เริ่มจาก 3. ง่ายกว่าก็จริง แต่ก็ทำให้คุณเก่งขึ้นช้ากว่า)\n\n## TLDR\nLearn by building.","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/100-Days-of-Writing":{"title":"100 Days of Writing","content":"\nI've been thinking of this challenge while I was doing [#100DaysOfCode](#100DaysOfCode.md). As I want to be a better writer/blogger as well.\n\n## My problems with writing\n\n-   I had so many ideas, but often times cannot express them as words.\n-   I can't wire sentences into nice and clean paragraphs, so I ended up using bullet points, like this one.\n-   I get easily distracted when researching stuff.\n-   I don't like seeing the same words or phrases being used repeatedly, but I can't think of other words and why I don't like this.\n-   I lack the experience of writing essays, and my grades about writing is really bad.\n\n## Challenge Accepted\n\nBefore starting this challenge, I had gathered around 20 article ideas to write on this website in English. Most of them are productivity related, some are tech/coding. I want to write fiction too, but I don't think I can in my current state. Some will be posted on [my Medium](https://medium.com/@narze) as I see fit. I will try to make around 30-50 articles. Let's see if I can make it until the end!","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/2-Areas/Algorithms/Dynamic-Programming":{"title":"Dynamic Programming","content":"\n## Links\n- https://learnxinyminutes.com/docs/dynamic-programming/","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/2-Areas/Keyboard-Typing/Typing-Guide":{"title":"Typing Guide","content":"\nhttps://docs.google.com/document/d/1L-P68VDSGlpLM5A9tfRvWFohaR2NzPbkUT0ok34rsFU/edit\n- Practice regularly, take breaks\n- Have good posture\n\t- **![](https://lh6.googleusercontent.com/Rdz6ZpuF_Ro9DUAEpMPMlTn07BbjMfUjSyJVfeTVU579aOffQxep7MvyOh3Hm8mRMEsmyiLKjJ_3fBxV66ePVs95LYMRKoxnS_X9PjOFo2HyPN2mLS5fPTQZMcmaa7jSGzw8oDae)**\n- \"Typing is 99% Muscle Memory\"\n- Type before going to bed, have a regular sleep cycle\n- Accuracy First\n- Rhythm\n\t- Go faster on easy words, slower on hard words\n\t\t- Slow down on any words longer than 7 letters or shorter than 3\n\t- Read one word ahead\n\t- Read entire words, not single characters\n- Advanced tricks\n\t- Use right thumb to press n,m,b (h,k,v an Colemak DH) and sometimes comma\n\t- Control + Backspace to correct wrong words\n\t- Improve your reading speed\n- Notice weakness and fix it\n- Alternating between focusing on speed and accuracy","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/2-Areas/Microservices/Microservices-API-Patterns":{"title":"Microservices API Patterns","content":"\nhttps://www.microservice-api-patterns.org\n\nwww.youtube.com/watch?v=cNp7ys0g0Bs\n\n![](/Images/Microservices%20API%20Patterns%20(MAP).png)","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/3-Resources/%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%AA%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%AA%E0%B8%B2%E0%B8%A3%E0%B8%A0%E0%B8%B2%E0%B8%A2%E0%B9%83%E0%B8%99%E0%B8%AD%E0%B8%87%E0%B8%84%E0%B9%8C%E0%B8%81%E0%B8%A3%E0%B8%A2%E0%B8%B8%E0%B8%84%E0%B9%83%E0%B8%AB%E0%B8%A1%E0%B9%88%E0%B8%AB%E0%B8%A5%E0%B8%B1%E0%B8%87-Work-From-Home-%E0%B8%88%E0%B8%B0%E0%B9%80%E0%B8%9B%E0%B9%87%E0%B8%99%E0%B8%AD%E0%B8%A2%E0%B9%88%E0%B8%B2%E0%B8%87%E0%B9%84%E0%B8%A3":{"title":"การสื่อสารภายในองค์กรยุคใหม่หลัง Work From Home จะเป็นอย่างไร","content":"\n- \"Communication\"\n- Real-time communication has overhead \u0026 sync, use sparingly\n- Use Meeting as a last resort\n- Distinguish Factual Context from Spatial Context\n- Text message is async communication\n- Urgency is overrated, ASAP is poison, don't use these words often\n- Don't reply instantly, think first\n- Ask for confirmation\n- Automation (Slack)\n  - Automatic daily at 16:30\n  - Automatic weekly at Monday mornings","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/3-Resources/GraphQL/Chaining-GraphQL-queries":{"title":"Chaining GraphQL queries","content":"\n(ref: https://stackoverflow.com/questions/49317582/how-to-chain-two-graphql-queries-in-sequence-using-apollo-client/49320606#49320606)\n\nThe props added by your `firstQuery` component will be available to the component below (inside) it, so you can do something like:\n\n```\nexport default compose(\n  graphql(firstQuery, {\n    name: 'firstQuery'\n  }),\n  graphql(secondQuery, { \n    name: 'secondQuery',\n    skip: ({ firstQuery }) =\u003e !firstQuery.data,\n    options: ({firstQuery}) =\u003e ({\n      variables: {\n          var1: firstQuery.data.someQuery.someValue\n      }\n    })\n  })\n)(withRouter(TestPage))\n```\n\nNotice that we use `skip` to skip the second query unless we actually have data from the first query to work with.\n\n### Using the Query Component\n\nIf you're using the `Query` component, you can also utilize the `skip` property, although you also have the option to return something else (like `null` or a loading indicator) inside the first render props function:\n\n```\n\u003cQuery query={firstQuery}\u003e\n  {({ data: { someQuery: { someValue } = {} } = {} }) =\u003e (\n    \u003cQuery\n      query={secondQuery}\n      variables={{var1: someValue}}\n      skip={someValue === undefined}\n    \u003e\n      {({ data: secondQueryData }) =\u003e (\n        // your component here\n      )}\n\u003c/Query\u003e\n```\n\n### Using the useQuery Hook\n\nYou can also use `skip` with the `useQuery` hook:\n\n```\nconst { data: { someQuery: { someValue } = {} } = {} } = useQuery(firstQuery)\nconst variables = { var1: someValue }\nconst skip = someValue === undefined\nconst { data: secondQueryData } = useQuery(secondQuery, { variables, skip })\n```\n\n### Mutations\n\nUnlike queries, mutations involve specifically calling a function in order to trigger the request. This function returns a Promise that will resolve with the results of the mutation. That means, when working with mutations, you can simply chain the resulting Promises:\n\n```\nconst [doA] = useMutation(MUTATION_A)\nconst [doB] = useMutation(MUTATION_B)\n\n// elsewhere\nconst { data: { someValue } } = await doA()\nconst { data: { someResult } } = await doB({ variables: { someValue }\n```","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/3-Resources/The-documentation-system":{"title":"The documentation system","content":"\n![](Images/The%20documentation%20system.png)\nThere are 4 types of documentation\n1. Tutorials\n2. How-to guides\n3. Explanation\n4. Reference\n","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/4-Archives/%E0%B8%9B%E0%B8%A3%E0%B8%B1%E0%B8%8A%E0%B8%8D%E0%B8%B2%E0%B8%82%E0%B8%AD%E0%B8%87-IO":{"title":"ปรัชญาของ IO","content":"\n- รู้ก่อน (See First)\n- ตัดสินใจก่อน (Decide First)\n- ปฏิบัติก่อน (Act First)\n- และปฏิบัติอย่างมีประสิทธิผลกว่า (Act more effectively)\n- จนสามารถเอาชนะความเชื่อและศรัทธา (Heart and Mind)","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/4-Archives/AWS/Amazon-SES-Setup":{"title":"Amazon SES Setup","content":"\n- Create new domain identity to be able to *send* emails.\n- Create new test email identity to be able to *receive* test emails.\n- Add domain eg. `subdomain.example.com`\n- Add **DomainKeys Identified Mail (DKIM)** DNS records\n\teg. CNAME xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx._domainkey.xxxxx-staging.opn.dev -\u003e xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.dkim.amazonses.com \n- Create IAM for _AmazonSESFullAccess_ (development only)\n- ![[Amazon-SES-request-production-access.png]] Request production mode to send actual emails (Sandbox mode cannot send emails)\n\n## Node.js development\n- `yarn add aws-sdk`\n\n# References\n- https://medium.com/@maciej.lisowski.elk/nodejs-and-amazon-ses-how-to-send-emails-from-your-application-5c24b1f9b67b\n- https://attacomsian.com/blog/amazon-ses-integration-nodejs/\n- https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/ses-examples-sending-email.html","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/4-Archives/Computer/Ryzen-Hackintosh-Specs-Research":{"title":"Ryzen Hackintosh Specs Research","content":"\nNovember 28, 2020 - https://notebookspec.com/pc/8175463\nDecember 1, 2020 - https://notebookspec.com/pc/8184920\nDecember 10, 2020 - https://notebookspec.com/pc/8209709\n\nGeekbench\n- Old hackintosh : 800/2850\n- Current macbook (mid 2019) : 900/3350\n- 5600x  : 1500/7500\n- 5800x : 1500/8000-13000\n- 5900x : 1500/12000-16000\n\nhttps://dortania.github.io/OpenCore-Install-Guide/\n\nRam : https://www.jib.co.th/web/product/readProduct/36920\nMobo : (AM4) ASROCK B550 PHANTOM GAMING-ITX/AX https://www.lazada.co.th/products/mainbaord-am4-asrock-b550-phantom-gaming-itxax-i1509698267-s3989656319.html?spm=a2o4m.searchlist.list.14.355967bdtfqict\u0026search=1\n\n(AM4) ASROCK B550 PHANTOM GAMING-ITX/AX\nhttps://www.jib.co.th/web/product/readProduct/41968/1239/MAINBAORD--เมนบอร์ด--AM4-ASROCK-B550-PHANTOM-GAMING-ITX-AX\n6,960.-\nhttps://www.advice.co.th/product/mainboard/amd-am4-b550-/-am4-asrock-b550-phantom-gaming-itx-ax\n7100\n\nGigabyte Aorus b550i\nhttps://www.invadeit.co.th/product/motherboards/gigabyte/b550i-aorus-pro-ax-p051539/\n\n(AM4) MSI MPG B550I GAMING EDGE WIFI\nhttps://www.advice.co.th/product/mainboard/amd-am4-b550-/-am4-msi-mpg-b550i-gaming-edge-wifi\n5820\n\nCPU AMD AM4 RYZEN7 5800X\n15,300.- \n\nLIQUID COOLING COOLERMASTER MasterLiquid ML240L V.2 RGB\n2,150.- ","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/4-Archives/Ruby/Quine":{"title":"Quine","content":"```ruby\neval s=\"puts'eval s='+s.inspect\"\n```\n","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/AW-Waffle-Recipes-Thai":{"title":"A\u0026W Waffle Recipes [Thai]","content":"\nRef: \n\n**_วาฟเฟิลแบบของA\u0026W เป็นวาฟเฟิลที่กรอบแต่นุ่น ส่วนผสม_**  \nแป้งสาลีเอนกประสงค์ 2 ถ.  \n  \nยีสต์ 1/2 ชช.  \nน้ำตาลทราย 1 ชต.  \nเกลือ 1/2 ชช.  \nนม 2 ถ.  \nเนยละลาย 8 ชต.(ทิ้งให้หายร้อน  \nวนิลา 1/2 ชช.  \nไข่ 2 ฟอง แยกไข่ขาว / ไข่แดง  \nน้ำมันทาพิมพ์เล็กน้อย  \n  \nวิธีทำ  \n  \n1. ไม่ต้องร่อนแป้งก่อน ตวงโดยตักแป้งใส่ถ้วยตวงทีละน้อย เบามือ จนพูนแล้วปาดให้เรียบเสมอปากถ้วยตวง  \nที่ต้องบอกวิธีตวงแป้งอย่างละเอียด เพื่อจะให้ได้ปริมาณแป้งออกมาใกล้เคียงกัน ซึ่งจะมีผลต่อเนื้อขนมอย่างมากเลยค่ะ  \nว่าจะตวงแล้วชั่งน้ำหนักเอาไว้ แต่พอตอนทำก็ลืมทุกที  \nทุกครั้งที่ทำก็ตวงอย่างที่บอกไว้ค่ะ ตอนผสมก็จะดูเนื้อแป้งที่ผสมแล้ว บางทีก็เติมแป้งหรือเติมนมลงไปอีกนิดหน่อย 2.ใส่ส่วนผสมที่เป็นของแห้ง + เนยละลาย + นม ในอ่างผสม คนจนเข้ากันดี ปิดฝาแล้วตั้งทิ้งไว้ในอุณหภูมิห้อง ค้าง 1 คืน  \nผสมก่อนที่จะเข้านอนนะคะ  \nเวลาที่แป้งขึ้นฟู มันจะได้ 3 เท่าของปริมาณที่เราผสมในตอนแรก ดังนั้นต้องใช้อ่างผสมให้ใหญ่พอ จะได้ไม่ล้น  \nสำหรับ นม เนื่องจากบ้านเราอากาศค่อนข้างร้อน ทิ้งค้างคืนมันอาจจะเสียซะก่อน ดิฉันจึงทำให้ร้อน เกือบเดือดแต่ไม่ถึงกับเดือด แล้วพักให้เย็นจึงนำมาผสม  \n  \n3. ใส่ไข่แดงลงไป คนให้เข้ากัน  \n  \n4. ตีไข่ขาว จนตั้งแข็ง[stiff peak]  \n  \n5. ผสมไข่ลงในแป้ง ผสมแบบตล่อมเบาๆ ให้เข้ากัน จนไม่เห็นไข่ขาว เนื้อแป้งจะข้นประมาณเดียวกับแป้งเค้ก[Cake batter] 6. ทดลองอบในพิมพ์วาฟเฟิลดู ถ้าออกมานิ่มๆแสดงว่าแป้งน้อยไป ให้ใส่แป้งลงไปเพิ่มนิดหน่อย  \nถ้าออกมาแข็งมากแสดงว่าแป้งมากไป เติมนมนิดหน่อย  \nถ้าตวงแป้งตามที่บอก น่าจะได้วาฟเฟิลที่เนื้อกรอบนิดๆ  \nระวังอย่าใส่เกลือมากกว่าสูตรนะคะ ตามสูตรนี่ก็รสจัดแล้ว  \nถ้าใช้พิมพ์เทฟล่อน ไม่ตัองทาน้ำมันก็ได้ ดิฉันทาด้วยเนยละลายที่เหลืออยู่ แถมทาไม่ค่อยทั่วดี สีเลยออกมาด่างๆ ใช้น้ำมันน่าจะสีสวยกว่าค่ะ","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Adding-Tailscale-to-Rails-App":{"title":"Adding Tailscale to Rails App","content":"  - `tailscale cert [hostname].[alias].ts.net` \n    - e.g. `tailscale cert noom-do.risk-in.ts.net`\n  - `bin/rails s -b 'ssl://0.0.0.0:3000?key=path/to/file].key\u0026cert=path/to/file.crt'`\n  - Add `config.hosts \u003c\u003c \"noom-do.risk-in.ts.net\"` to ruenvironment.rb\n  - #rails encode uri with `ERB::Util.url_encode` (Better than `URI.escape` for spaces)","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Amazon-SES-request-production-access.png":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Bookmarks":{"title":"Bookmarks","content":"\n- 2022-08-05\n  - https://specbranch.com/posts/one-big-server\n  - https://calebschoepp.com/blog/2022/productivity-porn\n  - https://www.innoq.com/en/blog/wie-ich-meine-konzentration-wiederfand","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/CoderZoo":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Cold-Brew-Coffee-savings":{"title":"Cold Brew Coffee savings","content":"\nI forget the exact number all the time, so I'll put it here.\n\nCoffee beans (250g) : 120 THB / bag 1 bag of coffee can do around 3 batches of cold brew 1 batch of cold brew = 4 shots of coffee (no milk) so it will be 10 THB / cup\n\nWater : Around 3 THB / Litre \u003c 0.5 THB / cup so I'll skip this\n\n2 litres of milk (Meiji) : 90 THB 1 cup uses 250ml so around 12 THB / cup\n\n1 bottle of vanilla syrup : 300 THB I don't know exactly how many cups it can make, but the whole bottle takes around a month, so it is 5 THB / cup\n\nTypical coffee (Amazon) : 60 THB / cup\n\nSaving 60 - (10 + 12 + 5) = 27 THB / CUP\n\nMe \u0026 my wife drink 1 cup per day -\u003e 60 cups per month\n\nTo summarize, we saved 27 * 60 = 1620 THB per month!","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Colemak-Mod-DHm":{"title":"Colemak Mod-DHm","content":"\nAfter 7 years of switching to Colemak keyboard layout, I decided to move on to a new layout.\nI have seen [Mod-DH](https://colemakmods.github.io/mod-dh) for quite a while. It is an improvement on Colemak which will be easy for me.\n\nFor reason why I want to switch although I already achieved 100 words per minute on standard Colemak, is I just want to challenge myself and see how long I will take to rewire my muscle memory and get the typing speed back on track with the new layout.\n\n## Little problems with standard Colemak\n\nI can confirm that Colemak is already awesome. When compared with Qwerty, the keys oftenly used stay within home row and important shortcut keys are still in place (Z,X,C,V,A).\nHowever, Mod-DH improves it by moving D \u0026 H keys to bottom row but in easier position than on the home row but in the center which needs more lateral movement of the fingers.\n\nThe most common word which use letter T like `the` will use less effort in Colemak-DH than standard Colemak.\n\nOn 2017 Mod-DH made a minor revision which swaps the K and M but I prefer the first version which later called Colemak-DHm which still has M on the home row and K will be the same place as standard Colemak.\n\n## Switching\n\nThe total keys moved from standard Colemak to Colemak Mod-DHm is 6 Keys (B,D,G,H,M,V). I've highlighted them in my [Codepen](https://codepen.io/narze/pen/OJNLNKg), printed \u0026 attached it to my monitor to practice.\n\nOn first day I got around 40wpm on [10ff](http://10fastfingers.com/), and I use [Colemak Academy](https://www.colemak.academy) to practice mainly on D \u0026 H.\nI also noticed that with Mod-DHm, there are more words consists of home row letters plus D+H. I also use this mod at work \u0026 try not to type it wrong.\nI still use standard Colemak layout but swap the modded keys using [Karabiner Elements](https://karabiner-elements.pqrs.org).\nThe hardest key on my switching journey is `V`, since I use `⌘ + V` all the time. I have to remap `⌘ + V` back from `B` to original position.\n\nAfter first week, I achieved 80wpm on average (I create [a new account on 10ff](https://10fastfingers.com/user/2163743/) to track my progress.)\nHowever, my speed on standard Colemak dipped from 100-ish to 50wpm, so I can't turn back anymore.","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Collectors-Fallacy":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Cryptocurrency-3d-printing":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Data-Oriented-Programming":{"title":"Data Oriented Programming","content":"\n![](/Images/Data%20Oriented%20Programming.png)\n\n# Summary\nA story about adopting Data-Oriented Programming paradigm and it's 4 principles which reduce complexity compared to Object-Oriented Programming (OOP). However DOP is language agnostic and can be applied on OOP, and also FP (Functional Programming).\n\nThe core idea is to use generic data structure like JSON to represent data, then separate the code (behavior) from the data. In OOP-ish languages you can use Static Class Method.\n\nHowever, adopting DOP comes with a price, such as slight performance impact (which can be fixed by using libraries like Lodash or Immutable.js), also developers must understand FP enough to work with data manipulation as well.\n\n# Part 1 - Flexibility\n## Chapter 1 - Complexity of Object-Oriented Programming\n- Complexity of OOP\n\t- Code and data is mixed\n\t- Data is locked in objects\n\t- Code is locked in classes\n\n## Chapter 2 - Separation between code and data\n- Data Oriented Programming (DOP)\n\t- Used in Clojure\n\t- DOP Principle #1 : Separate Code from Data\n\t\t- Data Entities\n\t\t\t- Nouns / noun phrases in the requirements\n\t\t\t- Draw data entity diagrams, group into high level groups (nested list or mind map)\n\t\t- Code Modules\n\t\t\t- Verbs / verb phrases in the requirements\n\t\t\t- Stateless functions\n\t\t\t- Aggregate \"exposed\" functions in a single code module\n\t\t\t\t- Can be represented in package, namespace, or class\n\t\t\t- Has \"Usage\" relations between modules\n\t\t\t\t- e.g. Library module \"uses\" Catalog module\n\t\t\t\t- Causes \"Constraints\"\n\t- DOP is against Data Encapsulation of data in Objects\n\t- DOP principles are language agnostic, can be applied in OOP and FP\n\t- Pass explicit data as function argument\n\t\t- Don't use `this` or `self`, they are the state of the object i.e. implicit argument\n\t- Define high level data modules\n\t- \"Data lives on its own\"\n\t\t- So that DOP is easier to understand because system is split into 2 parts\n\t\t- Easier to adapt to changing requirements\n\t- Supports polymorphism (See chapter 13)\n## Chapter 3 - Basic data manipulation\n- DOP Principle #2 : Represent data entities with generic data structures\n- Data Representation\n\t- Record\n\t\t- Heterogeneous map e.g. Book (TypeScript \"interface\")\n\t- Collection\n\t\t- Array, List\n\t- Index\n\t\t- Homogeneous map e.g. Record\u003cstring, Book\u003e\n- DOP: Data model is flexible\n\t- JSON Serialization is free (JSON.parse \u0026 JSON.stringify)\n\t- Trade data safety for flexibility \u0026 genericity\n\t\t- Safety: accessing record members defined at compile time\n- Use `Lodash` for data manipulation \u0026 retrieval\n\t- `_.map`\n\t- `_.get`\n\t- `_.filter`\n\t- `_.values`\n\t- `_.has`\n\t- `_.merge`\n- Data is represented as data (not Object)\n\t- Represent records with string maps (Record\u003cstring, ...\u003e)\n- Code contains no abstraction, just manipulate the data.\n- Nesting data can be retrieved with \"Information Path\"\n- Feature fields : Separate \"type\" of record (e.g. `isAdmin`, `isVIP`) as boolean\n\t- Simpler to having `type` field as Enum\n\n## Chapter 4 - State management\n- DOP Principle #3 - Data is immutable\n\t- But the state reference is mutable (like Git HEAD commit)\n- Mutation\n\t- An operation that changes the state of the system\n\t- Calculation phase + Commit phase\n\t- Data manipulation via native hash map is forbidden, must use immutable functions\n\t\t- Use Immutable.js to enforce Immutable data structure\n- Structural sharing\n\t- Sharing the parts that don't need to change\n\t- Use shallow clone\n- `_.set` is mutable function by default, use \"Lodash FP\" for immutable version\n```javascript\n_ = fp.convert({\n  \"cap\": false,\n  \"curry\": false,\n  \"fixed\": false,\n  \"immutable\": true,\n  \"rearg\": false\n})\n```\n- Commit phase is stateful (OOP-like)\n\t- Validate inside commit phase (e.g. Git commit hook)\n\n## Chapter 5 - Basic concurrency control\n- Use Optimistic Concurrency Control (OCC) without locking mechanism\n\t- Locks hit performance \u0026 cause deadlocks\n\t- Elasticsearch uses OCC\n\t- \"Let mutations (commit phase) ask forgiveness instead of permission\"\n\t- We assume that conflicts don't occur to often, hence the name \"optimistic \"\n- 3-way merge like Git, when conflict occurs\n- Structural Diff\n\t- Uses `_.reduce`\n\t- Conflict occurs wheh the diff share the same information path (`_.intersection`)\n- Implement SystemComsistency.reconcile \u0026 SystemValidity.validate in commit phase\n\n## Chapter 6 - Unit tests\n- In DOP, usually mocking functions is not needed\n- Test f(dataIn) == expectedDataOut\n\t- Use `_.isEqual` to compare data recursively\n- Data validity depends on the context\n\t- e.g. Can strip some unused data, just for unit testing\n- Tree of function calls\n\t- Test the tree leaves first (Unit test)\n\t- Low data complexity : More test cases\n\t- Higher data complixite : Less test cases\n\t- Assume that the functions down the tree work as expected (when writing unit tests from the leaves up to the root)\n\n# Part 2 - Scalibility\n## Chapter 7 - Basic data validation\n- DOP Principle #4: Separate data schema and data representation.\n- Data validation\n\t- Validate data that crosses the system boundaries (for production safety) \u003e validate data inside the system (for ease of development)\n- Use [JSON Schema](https://json-schema.org)\n\t- [ajv](https://github.com/ajv-validator/ajv)\n\t\t- ajv catches only the first validation failure by default\n- Be strict on data you send, be flexible on data you receive\n\t- Robustness principle: \"Be conservative in what you send, be liberal in what you accept\" (https://en.wikipedia.org/wiki/Robustness_principle).\n\t- \"Client is always right\"\n- JSON schema cheatsheet\n\t- Schema\n```json\n{\n  \"type\": \"array\", ❶\n  \"items\": {\n    \"type\": \"object\", ❷\n    \"properties\": { ❸\n      \"myNumber\": {\"type\": \"number\"}, ❹\n      \"myString\": {\"type\": \"string\"}, ❺\n      \"myEnum\": {\"enum\": [\"myVal\", \"yourVal\"]}, ❻\n      \"myBool\": {\"type\": \"boolean\"} ❼\n    },\n    \"required\": [\"myNumber\", \"myString\"], ❽\n    \"additionalProperties\": false ❾\n  }\n}\n```\n  - Valid Data\n```json\n[\n  { ❶\n    \"myNumber\": 42,\n    \"myString\": \"Hello\",\n    \"myEnum\": \"myVal\",\n    \"myBool\": true\n  },\n  { ❷\n    \"myNumber\": 54,\n    \"myString\": \"Happy\"\n  }\n]\n```\n\n## Chapter 8 - Advanced Concurrency Control\n- Deadlocks never happen with Atoms.\n- Atom consists of `get`, `set`, and `swap`\n- `swap`: Compute next value of the Atom, then check if value has not changed during the computation (OCC), them commit using `set`\n\t- e.g. `counter.swap(x =\u003e x+1)`\n\t- If data is changed during the computation, retry\n\t- Check if value is not change using [Compare and Swap (CAS)](https://en.wikipedia.org/wiki/Compare-and-swap) operation\n\t- In theory, doing this could create Starvation, but in practice the threads would do some real work e.g. db access, then other threads  can swap the atom by that time\n\n## Chapter 9 - Persistent Data Structures\n- When collection is big, naive structural sharing has performance issues e.g. diff-ing\n- And also it doesn't prevent direct mutation\n- [Persistent Data Structure](https://en.wikipedia.org/wiki/Persistent_data_structure) preserves previous version of itself when modified\n- When data is immutable, it is safe to share it e.g. Adding a node to the head of existing linked-list\n- Persistent lists can be manipulated in near constant time, using linked list with tree.\n- Immutable.js supports PDS\n\t- `Immutable.fromJS({...})`\n- [Mudash](https://github.com/brianneisler/mudash) ports Lodash to Immutable\n\t- Or port it yourself\n```javascript\nImmutable.map = function(coll, f) {\n  return coll.map(f);\n};\n\nImmutable.filter = function(coll, f) {\n  if(Immutable.isMap(coll)) {\n    return coll.valueSeq().filter(f);\n  }\n  return coll.filter(f);\n};\n\nImmutable.isEqual = Immutable.is;\n\nImmutable.reduce = function(coll, reducer, initialReduction) {\n  return coll.reduce(reducer, initialReduction);\n};\n\nImmutable.isEmpty = function(coll) {\n  return coll.isEmpty();\n};\n\nImmutable.keys = function(coll) {\n  return coll.keySeq();\n};\n\nImmutable.isObject = function(coll) {\n  return Immutable.Map.isMap(coll);\n};\n\nImmutable.isArray = Immutable.isIndexed;\n\nImmutable.union = function() {\n  return Immutable.Set.union(arguments);\n};\n```\n  - Then replace all `_.` with `Immutable.`\n\n## Chapter 10 - Database Operations\n- DOP represent data from database with generic data collections, and manipulate it with generic functions\n- Validate query from database with JSON Schema (ajv)\n- Use `_.at` to slice values using keys\n- Rename SQL result keys with map, filter, reduce (e.g. convert snake_case from database to camelCase in JSON)\n- Aggregate field from SQL queries with JOINs\n\n## Chapter 11 - Web Services\n- DOP: Build the system insides like building the outsides\n- Combine data from database \u0026 external APIs with generic functions\n- Transform array into map with `_.keyBy`\n\n# Part 3 - Maintainability\n## Chapter 12 - Advanced Data Validation\n- All functions receive and return generic data, so that it's hard to know the expected shape of data in \u0026 out during development\n\t- Write in\u0026out schema validation which runs only in dev \u0026 test environment\n- JSON Schema\n\t- Use `additionalProperties: {\"type\": \"number\"} for number maps`\n\t- Use `prefixItems` to define schema for tuples\n\t- Can also validate with Regex patterns, number ranges, date, etc.\n\t- Use https://navneethg.github.io/jsonschemaviewer to visualize schema\n\t- Use https://github.com/metosin/malli to generate PlantUML diagram, then visualize with https://www.planttext.com/\n\t- Generate fake data from JSON Schema with https://github.com/json-schema-faker/json-schema-faker\n\t\t- Useful for unit testing\n- Data validation inside the system should be disabled in production as it'll impact performance\n\n## Chapter 13 - Polymorphism\n- Polymorphism = polus + morphe = many + form\n- Main benefit of polymorphism is extensibility\n- Represent `\"type\"` in JSON data (the field name can be anything)\n- Use Multimethod to achieve polymorphism in DOP\n\t- Js library : https://github.com/caderek/arrows/tree/master/packages/multimethod\n\t- Create `dispatch` function and returns type of data in JSON\n\t- Create `method` for each type\n\t- Combine in `multi`\n\t- Supports tuple `\"type\"` e.g. `[animal, language]` as [Multimethod with multiple dispatch](https://en.wikipedia.org/wiki/Multiple_dispatch)\n\t- Multimethod with dynamic dispatch e.g. animal which name is longer than 5 chars\n\n## Chapter 14 - Advanced Data Manipulation\n- Generic update function\n\t- `update(data, path, fun)` e.g. `update(book, \"authors\", _.uniq` or `update(book, \"lentCount\", x =\u003e x+1)`\n\t- Lodash has `_.update`\n- `_.flatMap` = `_.map` then `_.flatten`\n- Pick the least generic utility function that solves the problem\n\t- e.g. Use screwdriver to turn screws instead of Swiss army knife\n\t- Use `reduce` instead of `forEach`, if possible\n\t- Refactor to function with proper name to hide low-level data manipulation e.g. `countByBoolField(books, \"isLent\", \"lent\", \"notLent\")` \n- MongoDB's `$unwind` implemented in js\n```javascript\nfunction unwind(map, field) {\n  var arr = _.get(map, field);\n  return _.map(arr, function(elem) {\n      return _.set(map, field, elem);\n  });\n}\n```\n- 4 Steps of custom data manipulation design\n\t- 1. Discover the function signature (name, parameters, return value) by using it before implement\n\t- 2. Write unit test (TDD)\n\t- 3. Formulate behavior in plain English\n\t- 4. Implement\n\n## Chapter 15 - Debugging\n- Determinism of function \n\t- The same arguments always lead to same return values\n\t- \"Functional Programming\"\n- Avoid state to cause \"Side effects\" as much as possible\n\t- Have only SystemState module deals with state (e.g. database)\n- REPL\n  - `node` in CLI, browser dev console\n\t- Copy object or data to run in repl for debugging\n\t- Faster feedback loop\n\t\t- When done with debugging and fixing in REPL, test the system once from end to end.\n- \"Context Capturing\"\n  - `copy(string)` copy data from browser dev console\n\t- Add `console.log(arguments)` in the first line of function\n\t- Wrap with JSON.stringify to add surrounding quotes e.g. `console.log(JSON.stringify(sentence));`\n```javascript\nfunction contextCapturer(fun) {\n  return (...args) =\u003e {\n    args.forEach((arg) =\u003e console.log(JSON.stringify(arg)))\n    return fun(...args)\n  }\n}\n\nfunction test(a,b,c) {\n  return a+b*c\n}\n\ntestA = contextCapturer(test)\ntestA(1,2,3)\n1\n2\n3\n\n=\u003e 7\n```\n- `JSON.stringify(data, null, 2)` specify the number of characters to use for indentation\n- #regex \\b : word boundary, use to perform prefix matching (i.e. `^` but locally)\n\n## Appendix A\n- DOP Mind map\n  - Data\n    - Representation\n      - Generic\n        - Mutable\n        - ~~Immutable~~\n      - ~~Specific~~\n    - Schema\n  - Code\n    - Functional Programming\n    - Object-Oriented Programming\n- Data Entities has Association \u0026 Composition relations\n- Code Entities (Modules) has Dependency \u0026 Inheritance relations\n- Price of using DOP\n  - Principle #1 - Separate Code From Data\n    - No control on what code can acccess what data\n    - No packaging\n    - More entities to build\n  - Principle #2 - Represent Data With Generic Data Structures\n    - Slight performance hit\n    - No data schema\n    - No compile time data type checks\n    - Type casting may be needed for some statically-typed languages\n  - Principle #3 - Data Is Immutable\n    - Performance hit\n    - Need library for Persistent Data Structure\n  - Principle #4 - Separate Data Schema from Data Representation\n    - Weak connection between data and its schema\n    - Slight performance hit\n\n## Appendix C\n- Data Oriented Programming != Data Oriented Design != Data Driven Programming","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Debug-less-development":{"title":"Debug-less development","content":"\n# Debug-less Development\n\nAre you using `console.log` all the time when you create websites?\n\nAre you adding breakpoints in every if-else blocks in IDE?\n\nI saw some people tried to print everything all the time they write code. I think these behaviors are not making them be better developers, but worse.\n\n## Why?\n- It slows you down\n- It leaks data\n- It makes code dirty\n- It lowers your trust in your code\n\n## What can I do instead?\n- Write tests instead\n- Write better \u0026 cleaner code\n- Make printing logs your last resort\n- Use debugging tools to \"debug\"","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Dev-Mountain-Tech-Fest-Notes":{"title":"Dev Mountain Tech Fest Notes","content":"\nKeywords\n- Matter + Energy + Information\n- BitKub Stack\n  - Style Dictionary https://amzn.github.io/style-dictionary\n  - TestRail\n- eBPF \u0026 Cilium https://cilium.io\n- dbt\n  - github.com/zkan/hello-dbt\n- AirByte\n- dataengineercafe.io\n- Declarative Programming \"อรรถาธิบาย\"\n- Esolang\n- https://coggle.it/diagram/YgSRKkMks4i53-Ps/t/webassembly-icon-wasm-webassembly\n- https://shiny.rstudio.com/gallery/india-blood-banks.html\n- https://rstudio.cloud\n- WasmEdge\n- MediaPipe\n- SIMD\n- https://blog.avareum.finance\n- [xDS](https://github.com/getsentry/xds)\n  - https://www.npmjs.com/package/@grpc/grpc-js-xds9\n- https://speakerdeck.com/whs/a-date-with-grpc\n- Agile = Iterative + Incremental\n- [Software Craftsmanship](http://manifesto.softwarecraftsmanship.org)\n- https://drive.google.com/file/d/1ljzhUoylCVOdpjc3iYD_KZIfrfAvq5N7/view?usp=drivesdk\n- Books\n  - Cracking the Coding Interview\n  - Grokking Algorithms\n  - System Design Interview (Alex Xu)\n- Interviewing is a skill\n- Google Cloud Run \n  - https://nuuneoi.com/blog/blog.php?read_id=973\n- Google cloud iot core\n- TP Link kasa smart plug\n- Python-broadlink\n- Azure Cosmos DB\n- \"Improvised Coding\"\n- xkcd/1319\n- https://form.new\n- Infrastructure as Software \n  - Marketing term : Developer-First Infra as Code","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Digital-Detox":{"title":"Digital Detox","content":"\nEvery once in a while, I slipped into the world full of distractions, named the Internet. Like everyone does, I take hours viewing Youtube videos, scroll through Facebook posts, reading Tweets, and so on. All of them are neatly optimized that you'll keep checking them out, again and again.\n\nI stumbled upon this idea by [Andrew Kirby's Dopamine Detox][1] (Yeah, on his Youtube). The rule sounds easy but really hard to do. That is, don't do anything that gives you Dopamine. Which in the extreme level, includes eating as well. I tried it once and it works like a charm. But I have to admit that it is difficult since I still have to eat, feed dogs, write blogs. So I make a subset of Dopamine Detox. It's called Digital Detox.\n\nThe rule is more simple, of course. Just don't touch or use anything which distracts you digitally. I tried to do it twice a month, in the weekends. \n\n## My detoxification day\nBefore the day, I would prepare myself to reduce external factors and temptation to use my smartphone or computer.\n\n- Prepare a book to read, e-book reader is OK but make sure you have the book file and disable the network afterward.\n- Disable or mute all app notifications. I made an exception for the alarm clock app though.\n- Tell your friends or family that you'll be unavailable for a day.\n\nThen on the day after I put of the alarm. I leave my phone there and continue the day without it. Read the book you want to, write articles (I have a disconnected Macbook Air for this), meditate, play with my dogs, do chores.\n\n## Reflection\nThe Digital Detox helps me getting back on track. Sometimes I spent many hours a day watching Youtube and getting less sleep, and it affected the other day. Furthermore, it helps me focus more on doing things. I can read more than my other days as I tend to stop after a few pages. Lastly, I can feel the Dopamine rush when I can finally check the unread messages in the end of the day.\n\n[1]: https://www.youtube.com/watch?v=_vcGF3HqZXg","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Digital-Garden":{"title":"","content":"What you're reading here is not a blog, it's a \"digital garden\".\n\nIt consists of posts like blog, but they can grow, like plants.\n\nAll of the posts will not be sorted chronogically and paginated to be forgotten over time (that sounds sad.)\n\nAll of the posts can be updated when I have more ideas to add, some will even be tagged with work-in-progress,\nlike the small seeds waiting for the water \u0026 nutrition.\n\nIf you're interested in building your digital garden like mine, see [Joel Hook's post][1].\n\nI'll keep planting more posts, so stick around!\n\n[1]: https://joelhooks.com/digital-garden","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Dotcode":{"title":"Dotcode","content":"\n```yaml\nname: dotcode - a ruby cli tool that treats your code boilerplates like dotfiles\nchildren:\n    - name: Features\n      children: \n      - n: dotcode init\n        c:\n        - Setups project if run on blank folder (choose template)\n      - n: dotcode apply\n        c: \n        - Run maintenance code if run on existing folder (idempotent)\n      - n: dotcode add [path]\n        c:\n        - Add file to template\n        - Diff \u0026 ask to overwrite, if conflict\n      - n: dotcode create [templatename]\n        c: \n        - Create new template from current folder\n      - n: dotcode project [cmd]\n        c: \n        - n: dotcode project add [projectname]\n          c: Add current path to project list\n        - n: dotcode project list\n          c: List projects\n        - n: dotcode project maintain [projectname] \n          c: Maintain project (Run scripts, open PR if has changes)\n```\n\n![](Images/Dotcode.png)\n\n## Todos\n- [ ] dotcode create (name)\n- [ ] dotcode add","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Financial-Freedom":{"title":"Financial Freedom","content":"\nIdeas:\n- Create sustainable \u0026 scaleable products\n\t- SaaS\n- Open sourced projects funding\n- Online courses\n\t- Udemy\n\t- Self-hosted\n- Write books\n- Indie Games\n- AdSense\n- Consultant\n- Part-time job\n- Investment\n\nResources:\n- https://www.indiehackers.com\n- https://producthunt.com\n","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Generating-an-optimized-Thai-keyboard-layout":{"title":"Generating an optimized Thai keyboard layout","content":"\nI built a new [Thai keyboard layout][1] called [Manoonchai](https://manoonchai.com)\n\n# Toward a more useful Thai keyboard layout\n\nAll of the Thai keyboard layouts are created in the typewriter era. I wanted to create a new one sometime ago since I moved from [Kedmanee](https://en.wikipedia.org/wiki/Thai_Kedmanee_keyboard_layout) (Thai's QWERTY) to [Pattachote](https://en.wikipedia.org/wiki/Thai_Pattachote_keyboard_layout). The problems of the two layouts is they're not optimized for modern keyboards, and even some of the characters are dead eg. `ฃ`, `ฅ`, `ฦ`, `๏`. Moreover, Thai numbers are seldomly used in normal situations, hence forcing users to switch to English layout to type numbers or use the numpad. Lastly, I want the layout I created to be keyboard form factor agnostic. I can use [40% Keyboard](https://duckduckgo.com/?q=40%25+keyboard\u0026atb=v226-1\u0026iax=images\u0026ia=images) with both Kedmanee \u0026 Pattachote, but still think that it can be better.\n\nApparently there is a new layout called [IKBAEB](https://gitlab.com/sahabandha/ikbaeb-th) which resonates all of the ideas, but I want to use modern Thai corpus as a dataset and then generate the layout somehow. Maybe it will yield the same result, but this way I will have an excuse to learn [Rust](https://www.rust-lang.org/).\n\nFor the name of the layout, I will use [my family name](https://github.com/manoonchai/manoonchai) for now.\n\n## Plans\n\n-   Learn minimum Rust to process Thai language corpus.\n-   Generate n-grams from corpus.\n-   Create typing effort model from n-grams, similar to [Carpalx](http://mkweb.bcgsc.ca/carpalx/?typing_effort).\n-   Discover \u0026 measure new layout with lower effort from the model.\n\n## Preparation\n\nSince I'll use [Rust][2] for this project and I'm relatively new to this language, I'll start from gathering the corpus from various sources and find out the most frequently used keys are. The code is simple, just scanning all the words from the source, count, then sort it like [this](https://gist.github.com/narze/9a3b71757bd3915387397b2bbaa8e0c8). The data is not quite useful, but it gives the idea which keys should be in the home row.\n\n## Typing Effort Model\n\nNext, I've planned to create the typing effort model similar to [Carpalx][3]. But the finger travel distance will be altered a bit to suit my use on [40% Keyboard][4]. When I got the model working I'll train with the text from all the sources, including my chat logs.\n\n## Triads\n\nI get some Thai corpus data (eg. [Wisesight][5], [Wongnai][6]) then generate the triads to see which 3-character substrings are being used the most ([Code][7]). The triads will be [one of the parameters][8] to calculate the typing effort.\n\nHere are the sample triads I got from the corpus.\n\n### Wongnai : Top 30\n\n```\n ้าน : 134642\n ร้า : 119805\n ที่ : 118052\n ไม่ : 102900\n ่อย : 82040\n ได้ : 73344\n นี้ : 72915\n มาก : 69226\n เป็ : 66661\n แต่ : 66436\n ป็น : 62878\n เลย : 62262\n ว่า : 59965\n ค่ะ : 57345\n ข้า : 53751\n ั่ง : 51812\n รับ : 51245\n ร่อ : 50937\n อร่ : 50575\n นนี : 48245\n หาร : 44594\n ครั : 44076\n าหา : 43952\n และ : 43314\n อาห : 43283\n ื่อ : 41649\n ให้ : 41496\n น้ำ : 40458\n ทาน : 40247\n ่าง : 38617\n```\n\n### Wisesight : Top 30\n```\n ที่ : 10920\n ไม่ : 10329\n ได้ : 7626\n 555 : 6047\n รับ : 5944\n ว่า : 5886\n นี้ : 5704\n การ : 5318\n ื่อ : 5292\n ให้ : 4747\n ล้ว : 4504\n เป็ : 4498\n ครั : 4400\n แล้ : 4359\n ป็น : 4331\n เลย : 4298\n ้อง : 4186\n กิน : 3957\n แต่ : 3957\n กัน : 3939\n ของ : 3727\n และ : 3341\n มาก : 3283\n วัน : 3231\n ค่ะ : 3181\n กับ : 3085\n ประ : 3003\n ่าง : 2989\n ั้ง : 2978\n ้าง : 2968\n```\n\nSome of the words are on the both list although the context are not the same (Restaurant reviews VS Social media messages.)\n\nThe rest can be read on my [Medium](https://medium.com/@narze)\n\n[1]: /toward-a-more-useful-thai-keyboard-layout\n[2]: https://www.rust-lang.org\n[3]: http://mkweb.bcgsc.ca/carpalx/?typing_effort\n[4]: /40-percent-keyboard\n[5]: https://github.com/PyThaiNLP/wisesight-sentiment\n[6]: https://github.com/wongnai/wongnai-corpus\n[7]: https://github.com/narze/Manoonchai/tree/main/analyzer\n[8]: http://mkweb.bcgsc.ca/carpalx/?typing_effort#triads","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Github-Actions":{"title":"Github Actions","content":"\n## Links\n- https://lolevsky.medium.com/automate-your-build-with-github-actions-and-firebase-distribution-react-native-90b94f488f95","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Hardselling-Svelte":{"title":"Hardselling Svelte","content":"\n- Introduce yourself (Dev, Eventpop, Opn)\n- Check who write frontend web\n  - Who uses React, Vue, (skipping Angular #troll)\n - Enter Svelte\n   - Compiler\n   - Write less, get more\n   - Keyword \"Svelte in 100 seconds\"\n - Live coding, vite `yarn create vite todo-barcampbangkok`\n   - Todo app\n     - Steps\n     - State is `let`\n     - Show with `{}`\n     - 1-way Binding with `value`\n     - 2-way binding with `bind:value`\n     - Button \u0026 event listener  `on:click={createTodo}`\n     - Add to array `[...todoList, {text: newItem, status: false}]`\n     - Loop with `{#each todolist as todo, idx}` block\n     - CSS `.checked { text-decoration: line-through; }`\n   - https://svelte.dev/repl/57e77721769740ef99d0c0cac3ec4f86?version=3.20.1\n - What are built with Svelte?\n   - Thwordle\n   - why-i-want-keychron\n   - Popyut\n - Closing\n   - twitch.narze.live","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Hit-that-snooze-but-once":{"title":"Hit that snooze, but once","content":"\nI'm not a morning person, and I will over-sleep all the time if I don't set the alarm. Moreover, like many people does, I set up a lot of snoozes too, and the result is that I will always wake up, hit the snooze button, then go back to sleep. I've tried configure the alarm app to limit the number of snoozes. But that doesn't help as much, as I will reach the snooze limit anyway.\n\nDisable snooze like many online articles have suggested? That works, but whenever it hit me out of my sleep cycle range, it will make me so groggy and make the day worse.\n\nOne day, I have came up with a way to fix this once and for all, by allowing the snooze button to be hit, but only once. By the time the alarm rings, I interpret that as \"Be prepare to wake up by the next alarm\", then I hit the snooze, go back to bed, but with less intention to stay slept. Sometimes I will think about things during this time, such as what will I do after getting up, what did I've just dreamed. These process will make me more \"ready\" for the day than waking up immediately.\n\nSo try to set the snooze limit to one time, if that is not possible for your alarm app, set 2 alarms with 5-10 minute interval instead.","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Home-Cluster-using-Raspberry-Pi-k3s":{"title":"Home Cluster using Raspberry Pi \u0026 k3s","content":"https://k3s.rocks\nhttps://github.com/narze/home-cluster\n\nhttps://excalidraw.com/#json=eXF2jbv8OrgyJQrg_Ymb3,Geu3XCWt52SBzpS2TMClXw\n\n![](Images/Home%20Cluster%20Architecture.png)\n# Setting up from scratch\n- Raspberry Pi 4 + Ubuntu\n  - Install Ubuntu 20.04 64bit instead of raspbian (32bit)\n    - [Changing Raspbian to 64 bit mode won't work](https://blog.differentpla.net/blog/2021/12/20/upgrading-raspios-to-arm64)\n  - Configure Wifi (Use Raspi Imager)\n  - Find pi's ip with `arp -na`\n  - Configure SSH\n    - sudo dpkg --configure -a\n    - sudo apt install avahi-daemon\n      - to enable `raspberrypi.local` instead of ip\n  - Prepare for k3sup with [visudo](https://github.com/alexellis/k3sup#pre-requisites-for-k3sup-servers-and-agents) \u0026 follow tutorial https://github.com/alexellis/k3sup#-micro-tutorial-for-raspberry-pi-2-3-or-4-\n    - Edit /boot/firmware/cmdline.txt (Ubuntu-specific)\n      - Add `cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory`\n      - Reboot once\n- Install `k3sup` on your host `brew install k3sup`\n- Install k3s on Raspberry pi\n  - `k3sup install --host raspberrypi.local --user pi --ssh-key ~/.ssh/id_ed25519 --context home-cluster-pi --merge --local-path ~/.kube/config`\n- Access your cluster `kubectx home-cluster-pi \u0026\u0026 kubectl get nodes`\n- Install Argocd-autopilot\n```shell\nbrew install argocd-autopilot\nexport GIT_REPO=https://github.com/narze/home-cluster\nexport GIT_TOKEN=ghp_PcZ...IP0 (Your Github PAT with repo scope)\nargocd-autopilot repo bootstrap\n```\n\n# Logging into my home lab from new host\n- Use k3sup install with `--skip-install`\n```shell\nk3sup install --skip-install --host raspberrypi.local --user pi --ssh-key ~/.ssh/id_ed25519 --context home-cluster-pi --merge --local-path ~/.kube/config\n\nkubectx home-cluster-pi\n```\n\n\n## How to develop Node.js apps on local \u0026 preview on pi k8s\n\n\n## ArgoCD Autopilot\n- brew install argocd-autopilot\n- export GIT_REPO=https://github.com/narze/home-cluster\n- export GIT_TOKEN=ghp_PcZ...IP0 (Your Github PAT with repo scope)\n- argocd-autopilot repo bootstrap\n\n\n## RPi self update\n- sudo -i\n- rpi-update\n\n## Change RPi to arm 64 bit instead of arm7l\n- Install Ubuntu 20.04 64bit instead of raspbian...\n\n## Networking with Tailscale\n- Installing Tailscale on Ubuntu https://tailscale.com/kb/1039/install-ubuntu-2004/\nLinks\n- https://blog.dsb.dev/posts/accessing-my-k3s-cluster-from-anyøwhere-with-tailscale/\n\n## Exposing services with Cloudflare Tunnel\nhttps://developers.cloudflare.com/cloudflare-one/tutorials/many-cfd-one-tunnel/\n\n# Cert-manager with Cloudflare DNS01 challenge\n- https://cert-manager.io/docs/configuration/acme/dns01/cloudflare\n- https://github.com/narze/home-cluster/compare/9ec8257a610da0f4c54e1d8fbfa2d642cdf73f75...70d31b1bd9dbec7f0833a4b478a40351eb898291\n\n# References\n- https://rpi4cluster.com\n- https://blog.differentpla.net/blog/2020/02/06/k3s-raspi-intro/\n- https://blog.alexellis.io/raspberry-pi-zero-2/ (OpenFaaS)\n\n\n## Keywords\n- k8s@home\n- k3s\n  - k3sup\n - Helm chart\n - sops \u0026 age\n - [kubernetes](https://github.com/topics/kubernetes \"Topic: kubernetes\") [helm](https://github.com/topics/helm \"Topic: helm\") [sops](https://github.com/topics/sops \"Topic: sops\") [gitops](https://github.com/topics/gitops \"Topic: gitops\") [active-project](https://github.com/topics/active-project \"Topic: active-project\") [argocd](https://github.com/topics/argocd \"Topic: argocd\") [k3s](https://github.com/topics/k3s \"Topic: k3s\") [helm-secrets](https://github.com/topics/helm-secrets \"Topic: helm-secrets\") [k8s-at-home](https://github.com/topics/k8s-at-home \"Topic: k8s-at-home\") [home-cluster](https://github.com/topics/home-cluster \"Topic: home-cluster\")\n - What's next\n   - Telegram bot\n   - Deploy Rails website\n   - ","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/How-I-git":{"title":"How I git","content":"\nInspired by [this post](https://daniel.haxx.se/blog/2020/11/09/this-is-how-i-git), this is my take on how I use git.\n\n## Command line!\n\nUsing Sourcetree is so 2010 😜 Some people said to me that they can choose only the files they want to stage and commit. Hold my beer!\n\n## Enter `git add --patch`\n\nThis lesser-known command will make you select \"hunks\" interactively, for example:\n\n```shell\ndiff --git a/test/pages/index.test.tsx b/test/pages/index.test.tsx\nindex d85854b..2b10a47 100644\n--- a/test/pages/index.test.tsx\n+++ b/test/pages/index.test.tsx\n@@ -35,6 +35,18 @@ beforeEach(() =\u003e {\n   )\n })\n\n+const renderWithProvider = (\n+  ui,\n+  { providerProps = { value: providerValue }, ...renderOptions } = {}\n+) =\u003e {\n+  return render(\n+    \u003cAuthProvider\u003e\n+      \u003cStatsProvider {...providerProps}\u003e{ui}\u003c/StatsProvider\u003e\n+    \u003c/AuthProvider\u003e,\n+    renderOptions\n+  )\n+}\n+\n describe('Home page', () =\u003e {\n   it('renders title', () =\u003e {\n     const { asFragment, getByText } = renderWithProvider(\u003cHome /\u003e, {})\n(1/3) Stage this hunk [y,n,q,a,d,j,J,g,/,e,?]?\n```\n\nIt will describe each file in diffs like above, then ask you if you want to stage the given hunk using `y`, or skip it with `n`. You can view all available commands with `?`.\n\n```shell\n(1/3) Stage this hunk [y,n,q,a,d,j,J,g,/,e,?]? ?\ny - stage this hunk\nn - do not stage this hunk\nq - quit; do not stage this hunk or any of the remaining ones\na - stage this hunk and all later hunks in the file\nd - do not stage this hunk or any of the later hunks in the file\ng - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nJ - leave this hunk undecided, see next hunk\ne - manually edit the current hunk\n? - print help\n```\n\nI often use `y`, `n`, `q`, `a`, `d`, `s`.\n\nI use this command alone so often I make the [one-letter alias](https://monosor.com/command-line-alias) out of it.\n\n```shell\nalias p='git add -A -N \u0026\u0026 git add -p'\n```\n\n`git add -A -N` is needed if you want to patch new (unstaged) files. [Ref.](https://thoughtbot.com/blog/intent-to-add)\n\n## Other commands\n\nI have many [git aliases](https://github.com/narze/dotfiles/blob/master/zsh/config/00_aliases.zsh#L17), but these are ones that I use the most.\n\n-   `g` (just `git`)\n-   `s` (git status)\n-   `m` (git commit -m)\n-   `gl` (git pull)\n-   `gp` (git push)\n-   `gm` (git merge)\n-   `gam` (git commit --amend --no-edit)\n-   `gco` (git checkout)\n    -   `gco -` : Switch to previous branch\n-   [`ghq`](https://monosor.com/manage-all-the-git-repos-with-ghq)\n-   `gh` : [GitHub CLI](https://github.com/cli/cli)\n    -   `gh repo view -w` : Open current repo on github.com\n    -   `gh pr checkout 123` : Checkout Pull Request #123","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/How-I-sleep":{"title":"How I sleep","content":"\nI am a sleepy person, on weekends I sleep for 9-12 hours. Though my deep sleep rate is more than average (30% of sleeping time). But on work days I certainly cannot sleep that much.\n\nI tried many techniques to decrease my long sleep time. The methods are not as different as what other people say about how to improve sleep quality.\n\n-   No caffeine afternoon\n-   No alcohol\n-   No food at night\n-   No screen time 2 hours before sleep (This one I can't...)\n-   Exercise regularly\n-   Sleep \u0026 wake at the same time, every day\n\nAll of these works OK, but there's one thing that really helps me to sleep only 6-7 hours a day. It is the Power Nap.\n\n## Power Nap\n\nEvery work day I will to go office's couch at the same time (3PM for me). Then I'll set my smart watch alarm, cover my eyes, and sleep. The Power Nap time may vary from 15-30 minutes. I experimented and found that 25 minutes work best for me. This helps me \"reset\" the energy level and work more efficiently until the day ends.\n\nHowever, I have to make sure that I don't nap more than 30 minutes, or I will be so groggy after I wake up.\n\nFurthermore, I will finish my coffee first, to make the nap be the [Coffee Nap](https://www.sleepadvisor.org/coffee-nap). The caffeine will kick in just the time I wake up, and make the nap more effective.","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/How-I-tmux":{"title":"How I tmux","content":"\nI'm a fan of [tmux](https://github.com/tmux/tmux). However, I hardly use `tmux` alone without these tools.\n\n## [.tmux](https://github.com/gpakosz/.tmux)\n\nI good tmux config for starter. Easy to use, and powerful. Powerline is included.\n\n## [Tmuxnator](https://github.com/tmuxinator/tmuxinator)\n\nI don't like to detach and attach sessions or use [`tmux-resurrect`](https://github.com/tmux-plugins/tmux-resurrect) / [`tmux-continuum`](https://github.com/tmux-plugins/tmux-continuum). I like to start a project with the same set of commands every time. So I use [Tmuxinator](https://github.com/tmuxinator/tmuxinator) to manage sessions with Yaml-formatted config instead.\n\nThis is the sample config for Tmuxinator, which runs 3 instances of `yarn` at once.\n\n```yaml\nwindows:\n  - editor:\n       layout: main-vertical\n       panes:\n         - \n         - yarn run e2e\n         - yarn run test\n   - server:\n       layout: main-vertical\n       panes: \n         - yarn run dev\n```\n\n## My Key Bindings\n\nI didn't use `Ctrl-A` or `Ctrl-B` as prefix like other people. I rebind the prefix to `Ctrl-;` instead (It is `Ctrl-O` on [Colemak DHm](https://monosor.com/colemak-mod-dhm)). Moreover, I use Ctrl + vim movement keys to switch windows \u0026 panes.\n\nSee my current config [here](https://github.com/narze/.tmux/blob/master/.tmux.conf.local).","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/How-to-Take-Smart-Notes":{"title":"How to Take Smart Notes","content":"","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Hyper-Key":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Ideas":{"title":"Ideas","content":"\nOn what I would do here\n\n- Fix image\n- Blog entry about setting this site up, maybe should be on [Medium](Outlets.md)?\n- TILs\n- PARA Structure\n- Meta page about this site \n\t- Obsidian\n\t- Rewrite plans using SvelteKit \u0026 Tailwind\n\t- Add to webring \n- Learn In Public\n- Fix image links\n","lastmodified":"2022-08-21T10:49:56.51715974Z","tags":null},"/Imperfect-Productivity-Routine":{"title":"Imperfect Productivity Routine","content":"\nIt's hard to keep tracking and doing productive activities, especially when you want to do many things every day. I tried and failed so many times. Sometimes they worked the most a week or two, then I tend to drop them one by one. Before I know it I'm back at the starting point again.\n\nI think the problem is I will lose motivation when I miss to do any of them just once.\n\nThen one day, I thought and admitted that they don't have to be perfect, skipping some of the things will not end the world. There's always be tomorrow and it's better doing less than standing still and lose all the momentum you got along the way.\n\nI have an idea to make a list of what I want to do daily or every other day, then do it at least one of them, and at most 80% of them. This is the example of the list.\n\n-   Sleep at least 6 hours, and wake in the morning (This should be skipped in weekends.)\n-   Do morning chores, like cleaning overnight dishes, tidy up the desk.\n-   Make a new batch of cold-brew coffee, or water kefir.\n-   Light exercise (5-10 sets of kettlebell, push-ups)\n-   10-minute meditation\n-   Maintain \u0026 review tasks list\n-   Email inbox zero\n\nI used to try hard to do all of them every morning, and they will mostly fail when I wake up late, then I feel bad about it, then the progress stopped.\n\nBy making the routine more slack and imperfect, will make the progress easier and more doable in the long run.","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Installing-Ruby-2.6-on-M1-Mac":{"title":"Installing Ruby 2.6 on M1 Mac","content":"\n# Ruby\nInstall with `RUBY_CFLAGS`\n```shell\nRUBY_CFLAGS=-DUSE_FFI_CLOSURE_ALLOC asdf install ruby 2.6.5\n```\n\n# FFI\nFix outdated version `ffi` with exports provided from `brew info libffi`\n\n```shell\nexport LDFLAGS=\"-L/opt/homebrew/opt/libffi/lib\"\nexport CPPFLAGS=\"-I/opt/homebrew/opt/libffi/include\"\nexport PKG_CONFIG_PATH=\"/opt/homebrew/opt/libffi/lib/pkgconfig\"\n\ngem install ffi # or bundle install in your project which includes ffi\n```\n\n# V8\nLibv8 may need python 2 to be installed\n```shell\nasdf plugin add python\nasdf install python 2.7.18\nasdf shell python 2.7.18\n\ngem install libv8 # or bundle install in your project which includes libv8 / miniracer\n```","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Maintaining-Momentum":{"title":"Maintaining Momentum","content":"\nThe key to keep doing what you want to do, is to do it less, but frequently.\n\nIt is what I do in [100 Days of Writing](100%20Days%20of%20Writing.md). I keep it short but try to not skip a day. Imagine that exercising or reading 2 hours stright at once is harder than 15-30 minutes a day, but every day. Not only that you're likely to want to skip it, but you would also be so exhausted in the next day if you do it so hard.\n\nAnother technique I'd like to suggest is to leave the work undone so that you can continue to do it tomorrow. It works well on some cases, like in writing code, I can leave the source code unpushed or commented it with `Work in progress`.\n\nAirplanes cannot fly before up to a certain speed.\n\nRome was not built in a day.\n\n[Building habits](Atomic%20Habits.md) takes time, but keep making small changes to gain the momentum then that'll make you unstoppable.","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/My-Coding-Workflow-2020":{"title":"My Coding Workflow (2020)","content":"\n## Rule of Thumb\n\n-   Almost everything I do start with command line interface. Now I use [Kitty](https://github.com/kovidgoyal/kitty) with Zsh. [Here are my Dotfiles](https://github.com/narze/dotfiles)\n-   Since I have 3 macOS machines (2 Macbooks \u0026 1 Hackintosh desktop), I sync my non-dotfiles with [Syncthing](https://syncthing.net/) and have a backup NAS at home.\n\n## Jumping around in command line\n\n-   I use [Zoxide](https://github.com/ajeetdsouza/zoxide) to remember paths I use often, eg. run `z dot` to change directory into `/Code/narze/dotfiles` since I previously access it.\n\n## Start / continue working on GitHub projects\n\nAll my code stays in `~/Code/` of every machines I have. Sometimes I have to switch the machine or I left my main Macbook at work. I use [`ghq`](https://github.com/x-motemen/ghq) to clone \u0026 navigate the repositories. You can configure this tool to use GitLab as well.\n\nIf I want to clone github.com/narze/dotfiles, I use the command :\n\n```\nghq get -l -p narze/dotfiles\n```\n\nThe code will be cloned to `~/Code/github.com/narze/dotfiles` and automatically `cd` me into it (If already cloned will just run `cd`.)\n\n## Text Editor\n\nStrangely, I'm still using VSCode instead of Vim/Emacs\n\n## Git\n\nFor commands I use, see [How I git](https://monosor.com/how-i-git)\n\nFor commit messages I used [Gitmoji](https://gitmoji.carloscuesta.me/). But changed to [Conventional Commits](https://www.conventionalcommits.org/).\n\nMy new repos will use `main` rather than `master` default branch name.","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/My-Dotfiles-2020":{"title":"My Dotfiles (2020)","content":"\nI keep updating my [Dotfiles](https://github.com/narze/dotfiles) to sync all of my Mac machines. Dotfiles are configuration files on the system which can be edit and share as a plain text. They're called \"dotfiles\" because they typically have leading `.` to make them hidden from the file system by default. Dotfiles can be built from scratch, or using tools like [rcm](https://github.com/thoughtbot/rcm), [Dotbot](https://github.com/anishathalye/dotbot), or even [Ansible](https://www.ansible.com/). Having shared Dotfiles availble on GitHub means I can setup a new Mac with all the apps I want using only a few commands. I use `make` command which calls Dotbot to install things for me, including :\n\n-   Install essential package managers\n    -   [Homebrew](https://brew.sh/) package manager for both command line tools and GUI apps (casks)\n    -   [mas](https://github.com/mas-cli/mas) for apps in Mac App Store\n    -   [asdf](http://asdf-vm.com/) for managing multiple programming languages with multiple versions\n-   Symlink all the dotfiles to `~` :\n    -   Zsh : [`.zshrc`](https://github.com/narze/dotfiles/blob/master/zsh/zshrc) with [Zinit](https://github.com/zdharma/zinit), an ultra-fast Zsh plugin manager (Much faster than Oh-My-Zsh!)\n    -   [Powerlevel10k](https://github.com/romkatv/powerlevel10k)\n    -   [Yabai](https://github.com/koekeishiya/yabai) - The only working tiling window manager for macOS.\n    -   Tmux : Use gpakosz's [`.tmux`](https://github.com/gpakosz/.tmux) with [Tmuxinator](https://github.com/tmuxinator/tmuxinator) to manage complex Tmux sessions\n    -   [Karabiner Elements](https://karabiner-elements.pqrs.org/) : The ultimate keyboard customizing app which I have been using for so many years. However, I use [Goku](https://github.com/yqrashawn/GokuRakuJoudo) to generate the Karabiner JSON file from the [.edn format](https://github.com/narze/dotfiles/blob/master/etc/karabiner.edn)\n-   For some GUI apps which does not support Dotfiles, I sync their settings with [mackup](https://github.com/lra/mackup) with [Syncthing](https://syncthing.net/).","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/My-User-Manual-2020":{"title":"My User Manual (2020)","content":"\nI was inspired from [Fostering psychological safety with a personal user manual](https://nesslabs.com/personal-user-manual). This is the manual about how you can interact or work with me.\n\n## Overview\n\n-   Uptime 08:00 - 25:00 (~6.5-hour sleep on weekdays \u0026 [freerunning sleep](https://simple.wikipedia.org/wiki/Freerunning_sleep) on weekends)\n-   Power Nap 15:00-15:30\n-   Loves problem solving\n-   [ISFJ-A \"Assertive Defender\"](https://www.16personalities.com/isfj-conclusion) (Previously I was an INTJ like on 5 years ago)\n-   Productivity enthusiast\n\n## Strengths\n\n-   Researching for solutions to the problem\n-   Solving logical problems\n-   Like finding better / alternative ways to do things\n-   Brain-storming ideas\n-   Observant\n\n## Weaknesses\n\n-   I cannot work at all when stressed out\n-   Long meetings will make me out of energy for the rest of the day\n-   Public speaking\n-   Overly detailed\n\n## Communication\n\n-   Twitter, Facebook Messenger, Telegram, Slack, Email\n-   I prefer short \u0026 concise messages rather than the longer one with same intent.\n-   If it is not personal, or will benefit the team. I will redirect it to the team channel/room.\n-   Expect that I will not answer instantly, as when I'm focusing I will disable all notification channels.","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/NFT-Art-Generator":{"title":"NFT Art Generator","content":"\n- https://nft-generator.art has drag \u0026 drop editor\n- https://the-nft-generator.com unlimited with monthly subscription\n- https://github.com/NotLuksus/nft-art-generator Opensource but command line","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Obsidian":{"title":"Obsidian","content":"\n## Links\n- https://www.keepproductive.com/blog/obsidian-beginners-guide","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Obsidian-Review-2020":{"title":"Obsidian Review (2020)","content":"\n[Obsidian](https://obsidian.md/) is the latest note taking app I'm using. After moving from Evernote and Notion, I ended up with Obsidian which is decent in many ways.\n\n## Markdown\n\nI love Markdown! I write document with Markdown a lot. It can have links, formatting, others many [features](https://www.markdownguide.org/getting-started), and works with various websites \u0026 apps.\n\n## Linking\n\nThis is the killing feature of Obsidian you can add links to other notes easily with `[[...]]` and you can see all the connections in the Graph View. You can create your own knowledge management system from your notes.\n\n## Fast \u0026 Secure\n\nEditing in Obsidian is fast \u0026 intuitive since it supports using local file, so you can use it with any cloud file services like Dropbox, Google Drive, etc. (I use [Syncthing](https://syncthing.net/) with every Macs I have \u0026 a NAS)\n\n## Simple Structure\n\nThe note structure is simple, but you can do almost everything with them. Like grouping them into folders, or add tags to each notes. I'm trying to organize it with [PARA system](https://fortelabs.co/blog/para) which I will explain later when I have more notes.","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Optimal-Anxiety":{"title":"Optimal Anxiety","content":"\nI heard it in Calm app on March 14, 2022","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Osu-Mania":{"title":"Osu! Mania","content":"\nhttp://osumania.rf.gd/?i=1\nhttps://compendium.skinship.xyz/?modes=mania","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Outlets":{"title":"Outlets","content":"\nI tried to post things separately, since I wants to try everything new to cope with my FOMO, maybe?\n\n- https://garden.narze.live : This site, the name can be change once I'm satisfied with this current setup. New pages will be listed on [RSS Feed](https://garden.narze.live/index.xml)\n- https://gitter.im/thai-devs/community : Tech/dev related links, a small community with my Thai internet friends \u0026 coworkers combined.\n- https://github.com/narze : All my open-source projects lives (and dies) here. Most of them are built with my [Svelte one-page site template](https://github.com/narze/single-page-svelte).\n- https://monosor.com (Inactive) : I tried to blog in English, but it's not fun to use Gatsby, I'm gonna try moving it or merge with this [Second Brain](Second%20Brain.md)\n- https://monosor.dev (Inactive) : I created I Thai coding tutorials which covers basic TypeScript and Ruby.\n- https://twitter.com/narze : Rants in Thai language.\n- https://facebook.com/narze : Personal Stuff.\n- https://linkedin.com/in/manassarn : Hire me I want to write Ruby.\n- https://blog.narze.live (Alias https://narze.medium.com) : Thai Blog\n","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/PARA-Method":{"title":"PARA Method","content":"\nA system for organizing digital information fortelabs.co/blog/para","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Paperang-on-MacOS":{"title":"Paperang on MacOS","content":"\nPoC with github.com/tinyprinter/python-paperang\n- `brew install llvm@11`\n- `LLVM_CONFIG=\"/opt/homebrew/Cellar/llvm@11/11.1.0_4/bin/llvm-config\" pip3 install llvmlite`\n  - _May have to change 11.1.0_4_\n- ghq get -l -p https://github.com/tinyprinter/python-paperang\n- `pip3 install -r requirements.txt`\n- Stuck on `lightblue` ... (No luck on Mac M1)\n  - ![](Pasted%20image%2020220426091500.png)","lastmodified":"2022-08-21T10:49:56.577160158Z","tags":null},"/Personal-OKRs":{"title":"Personal OKRs","content":"\nNew year's resolutions are not working for me. I used to set goals every year, and then I quit doing them within 2-3 months. It was not just I'm lazy, but when a month has passed, some of the goals I set became unnecessary or unrelevant, or I got bored and changed my mind from some of the goals I previously want to achieve. Moreover, I don't want to wait 3-6 months to start doing something on the new year's date. So I adopt [OKRs](https://en.wikipedia.org/wiki/OKR) and set new goals every 3 months instead. I currently use [Weekdone](https://weekdone.com/) to track my personal OKRs and update it every other day. I will have only 3 objectives per quarter so they won't be too much, each objective will have 3-5 Key Results which are not too easy but achieveable.\n\nHere are some of my OKRs\n\n-   Improve myself as a better frontend developer\n    \n    -   Finish #100DaysOfCode with no more than 10 days skip\n    -   Create 10 websites \u0026 deploy to cloud\n    -   Create 3 working open source projects which have 10 Github Stars each\n    -   Learn 8 testing javascript courses\n-   Get good at reading\n    \n    -   Read 10 books\n    -   Write 10 articles about books I read\n-   Be a better writer/blogger\n    \n    -   Write 50 articles/posts\n    -   Setup email subscription \u0026 get 50 subscribers","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Pom-OS":{"title":"Pom-OS","content":"\n# What?\nAn open-source ecosystem around Pomodoro Technique, which will includes apps and other things to integrate the technique to your life.\n\n# Why?\nThere are so many apps now. But each of them often miss my use cases, and I want to have full control of them, so it's time to build one!\n\n# My Pomodoro Use Cases\nTBD","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Pomodoro-Workflow":{"title":"Pomodoro Workflow","content":"\n[Pomodoro technique](https://en.wikipedia.org/wiki/Pomodoro_Technique) is one of the productivity method I use all the time. It's easy but very effective. I use this technique whenever I'm working, both in and out of office. The current app I use for timing is [Time Out](https://www.dejal.com/timeout). There are many Pomodoro apps but I like this once since it will block my screen, forcing me to take breaks.\n\nMy ratio is 30-minute work per 6-minute break (Standard is 25:5). I tweak so I can fit 4 sessions before and after [Power Nap](https://monosor.com/how-i-sleep)\n\nWhen I take breaks I'll do things to keep my mind out of work eg.\n\n-   Walk around\n-   Re-fill water bottles\n-   Quick chats with co-workers\n-   Toilet\n-   Practice typing on [Monkeytype](https://monkeytype.com/) (You can set Time Out to load any website on breaks.)\n-   Check emails on mobile phone\n-   Or just close my eyes until the break is finished\n\nThe Pomodoro technique really helps me on focusing, and keeping my energy throughout the day.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Public-Private-Obsidian-Notes-with-Github-iCloud":{"title":"Public \u0026 Private Obsidian Notes with Github \u0026 iCloud","content":"\nAll my [Obsidian](Obsidian.md) notes (including this one) is available on my [public second-brain Github repo](https://github.com/narze/second-brain) via backing up with [Obsidian Git plugin](https://github.com/denolehov/obsidian-git). By the way I also have private notes that I want to be synced throughout my [devices](./Uses). I added some rules to exclude files with [.gitignore](https://github.com/narze/second-brain/blob/main/.gitignore) all files and folders with `.priv` prefix will be for my eyes only. Then sync it with iCloud which works with my iPad flawlessly. (No solid solution for Android devices but I don't bother doing that, yet.)","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Pulumi":{"title":"Pulumi","content":"\n# Links\n- [Local Kubernetes Development With Pulumi (\u0026 Tilt)](https://blog.tilt.dev/2022/03/23/pulumi.html)\n- ","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/QMK":{"title":"QMK","content":"\n# Setup on Apple Silicon Macs\n- Install qmk CLI `brew install qmk/qmk/qmk`\n- Setup `qmk setup -H ~/Code/github.com/narze/qmk_firmware`\n- Compile `qmk compile -kb \u003ckeyboard\u003e -km default`\n  - e.g. `qmk compile -kb planck/rev6 -km narze`\n- Compile \u0026  Flash `qmk flash -kb planck/rev6 -km narze`","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Quartz":{"title":"Quartz","content":"\nThe [[Digital Garden]] engine behind https://garden.narze.live : https://quartz.jzhao.xyz\n\n## Upgrading Quartz\n- `git remote add upstream git@github.com:jackyzha0/quartz.git`\n- `git fetch upstream`\n- `git checkout upstream/hugo -- layouts .github Makefile assets config.toml data layouts static`\n- Review \u0026 add changes `git add -p`\n","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Reasons-you-should-write-tests":{"title":"Reasons you should write tests","content":"\n## 1. You don't want your user to be your tester\n\nThe least happy way to test is to let your users test it. Because they'll be sure to complain, or just quit using your product altogether. Even if they reach out to you, you have to figure out why it failed. Don't hope that your users will explain the issues thoroughly. They'll simply said \"It couldn't be used\" or \"It was broken.\"\n\nBut with tests, they'll be the loyal users which do as what you want them to do, and they'll raise The Red Flag for every failing case. The more tests you have, the more powerful your testing army will be.\n\n## 2. Legacy code sucks, and you are writing them\n\nEven if you're using the \"best practices\" today. There're no guarantee that they will still be the same in the (near) future. The framework or the language version will change. The future you, which certainly will have more experience than today, will want to change or refactor these \"legacy code\". Without tests, you'll be scared to change even the code is written with your own hand. Your team won't ever touch the code if they don't break. And if they do break, they'll be badly \"hot-fixed\" and be even more untouchable.\n\nHaving tests will make anybody be able to change the code whenever they want, upgrade dependencies, refactor, or even change the design pattern to the better one they just learned. Which is the good thing as the code will \"grow\" with you and won't be left alone, which is sad. Nothing is perfect, and your code is, too.\n\n## 3. Tests are the documentation\n\nI don't write docs. But many times I can learn how to use methods \u0026 interfaces by reading and following the test cases. Some languages like Python or Elixir have the thing called [Doctest](https://en.wikipedia.org/wiki/Doctest) that is the test generated from the docs.\n\n## 4. Test now or never\n\nMany people say \"I will add tests later\", that time never comes.\n\n## 5. Testing code improves your application code, and vise versa\n\nSpecifically to TDD practice, you write minimum test first, and minimum code to make test pass. Then you write more tests, then add or modify code to make all tests pass. Then refactor, if needed. You'll see that each iteration of Red-Green-Refactor will gradually improve the code and the tests. Writing only the code cannot improve the code itself, and it will likely to make it spaghetti-code.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Rust-for-Rubyist":{"title":"Rust for Rubyist","content":"\nI'm learning basic [Rust][1]. As a veteran Rubyist with OOP skill, Rust is like another world to me. So I'll try to list the key differences and terminalogies in each language side by side.\n\n| Ruby   | Rust | Note |\n| :-------------: | :----------: | :-------: |\n| Class/Module | Type/Trait   | Traits are more like Interfaces |\n| `rake`   | `cargo` |\n| Gems | Crates |\n| - | Macros | Ruby has Metaprogramming, but I don't think it's the same. |\n| `def` | `fn` |\n| `print \"#{var}\"` | `println!(\"{}\", var)` | Does Rust have string interpolation within quotes? | |\n| String | Char / String / String Slices |\n| `#` | `//` | Comments in Rust are like in JavaScript/C |\n| Array | Array / Vector | Array in Rust mostly be immutable, Vector can be mutable with `mut` |\n| `nil` | `Option\u003cSome, None\u003e` | I like the `Option` thing in Rust |\n| `case when` | `match` | Better pattern matching in Rust! |\n| block { \\|x\\| x } | closure ( \\|x\\| x ) |\n| No semicolons | Semicolons (almost) |\n| Duck Typing | Static Typing | Wait for Ruby 3! |\n\nI will add more when I read all essential docs and start making [something][2] with Rust.\n\n[1]: https://www.rust-lang.org/\n[2]: /toward-a-more-useful-thai-keyboard-layout","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Second-Brain":{"title":"Second Brain","content":"\n# Second Brain\nA term coined by [Tiago Forte](https://fortelabs.co). It's about capturing everything in a system to reduce information overload. He also created [PARA Method](/PARA%20Method.md).\n\nI used most of the tips from https://www.swyx.io/obsidian-brain to setup Second Brain on [Obsidian](/Obsidian.md). However, I didn't pay for [Obsidian Publish](https://publish.obsidian.md) and use [Quartz](https://quartz.jzhao.xyz) and Github Pages.\n\n## Notable Second Brains\n- https://github.com/sw-yx/brain\n\n## Links\n- https://aseemthakar.com/how-to-build-a-second-brain-as-a-software-developer/\n- https://www.zainrizvi.io/blog/remembering-what-you-read-zettelkasten-vs-para/","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Simplicity-is-Complicated":{"title":"Simplicity is Complicated","content":"\nI've heard people say that they want to make something like \"Social network for X\", \"WhatsApp, but for Y\", or \"Blockchain to solve Z\".\n\nWhen I ask why, some answered \"Because [competitor product name] is hard to use, but what I build will be more user-friendly, and easy to use.\"\n\n\"Wow, then how would you _do_ it?\"\n\n\"Just make the simpler version of it.\"\n\n\"How?\"\n\n\"Hire a team to focus on UX/UI.\"\n\n\"I think [competitor product name] already have the team, with supposedly more people than yours.\"\n\n\"Yeah, but we can make it _better_ than them.\"\n\nThe conversation did not end well.\n\nWhat they think about their product is based on nothing but the goal they want to see.\n\nI can do nothing but to wish them good luck, and learn how to achieve \"Simplicity\" the hard way.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Smart-Home":{"title":"Smart Home","content":"\nESP32\n- [https://www.gravitechthai.com/product-detail.php?WP=pQSgZ3p1GQEgG2rDqYyc4Uuw](https://www.gravitechthai.com/product-detail.php?WP=pQSgZ3p1GQEgG2rDqYyc4Uuw \"https://www.gravitechthai.com/product-detail.php?WP=pQSgZ3p1GQEgG2rDqYyc4Uuw\")\nIR Blaster\n- https://shopee.co.th/-ชิพใหม่-Tuya-S18-S06-S06-Pro-S08-S08-Pro-S09-IR-Remote-Control-อุปกรณ์ควบคุมรีโมท-IR-แอร์-ทีวี-รองรับ-Google-home-A-i.1714264.2716401013?sp_atk=097fafee-f93e-4dbb-8a86-a578854d50ee\u0026xptdk=097fafee-f93e-4dbb-8a86-a578854d50ee\u0026fbclid=IwAR1_qtcrvUHqtOLxHagJjARHRsbJPF_SosBFPSQ61I3GJFy3riCKBkZucyw","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Strangler-Pattern":{"title":"Strangler Pattern","content":"\nhttps://www.techtarget.com/searchapparchitecture/tip/A-detailed-intro-to-the-strangler-pattern\n![](Images/The%20Strangler%20Pattern.png)\n\n- https://martinfowler.com/bliki/StranglerFigApplication.html\n- https://shopify.engineering/refactoring-legacy-code-strangler-fig-pattern\n- ","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Streamie":{"title":"Streamie","content":"\n## Features\n- Twitch chatbot\n- Youtube chatbot\n- Discord bot\n- OBS overlay (SvelteKit)\n- User \u0026 Coin system\n  - Account binding (twitch, youtube, discord) using SvelteKit\n  - Getting points\n  - Redeem points\n- Interactive chat\n- Chat TTS on demand (use for repeating question or shoutouts)\n\n## Streaming Website to Twitch\n- Puppeteer + ffmpeg\n  - https://github.com/Flam3rboy/puppeteer-stream\n  - https://robinz.in/convert-an-html5-slideshow-to-a-video/\n  - https://github.com/MyZeD/node-puppeteer-rtmp","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Svelte-Course":{"title":"","content":"## Outlines\n- What is Svelte\n\t- Compiler\n\t- Creator - Rich Harris\n- Pre reqs\n\t- Nodejs\n\t\t- Installer\n\t\t- Version manager\n\t\t\t- Nvm\n\t\t\t- Asdf\n\t- Editor\n\t\t- VSCode\n\t\t\t- Extensions\n\t- Git\n- Bootstrapping project\n\t- Degit (rollup)\n\t- Vite (recommended)\n- Basic HTML in .svelte files\n- Svelte Repl\n- Syntaxes\n\t- If, else\n\t- Each\n\t- Etc.\n- Variables\n- Reactivity\n- Styling\n\t- Plain CSS\n\t- Tailwind\n- Testing\n\t- Unit\n\t- E2E\n- Projects\n\t- Homepage\n\t- Wordle\n- Deployment\n- SvelteKit","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Svelte-Meetup-Talk-Basic-Svelte-for-React-Vue-developers":{"title":"Svelte Meetup Talk - Basic Svelte for React \u0026 Vue developers","content":"\n- Introduction\n- Comparisons\n  - Note: React will use Functional Component style \u0026 Vue will use Composition API style\n  - Component structure\n    - React : Functional Component + styled-components / etc.\n    - Vue: SFC (Single-File Component)\n      - `\u003cscript setup\u003e` , `\u003cstyle\u003e`, `\u003ctemplate\u003e`\n    - Svelte: `\u003cscript\u003e`, `\u003cstyle\u003e`\n  - Basic state management + updating state + template syntax\n    - (Basic Counter)\n    - React: `useState`\n    - Vue:  `ref` / `reactive`\n    - Svelte: `let`\n  - Computed state\n    - (Squared Counter)\n    - React: `useMemo`\n    - Vue: `computed`\n    - Svelte: `$:` reactive statement\n  - Lifecycle\n    - React: `useEffect` \u0026 its return function(abused)\n    - Vue: `onMounted` / `onUnmounted`\n    - Svelte: `onMounted` / `onDestroy`\n  - 2-way binding\n    - React: ❌\n    - Vue: `v-model`\n    - Svelte: `bind:value`\n  - Conditional Rendering\n    - React: Ternary operator `condition ? true : false`\n    - Vue: `v-if`\n    - Svelte: `{#if ...} {:else} {/if}`\n  - Loop\n    - React: `.map()`\n    - Vue: `v-for`\n    - Svelte: `{#each arr as el, i} {/each}`\n  - Advanced state management\n    - React: Context API, Redux, Mobx\n    - Vue: Pinix, Vuex\n    - Svelte: Context API, `svelte/store`\n- Other interesting built-in features\n  - `svelte/motion`\n  - `svelte/transition`\n  - `{#await}` block (Request Loading)\n- Read more in Svelte.dev (It has tutorials, examples, repl)\n- Project showcases\n  - Thwordle\n\n- Astro pages\n  - `/index.astro` -\u003e Show all links\n  - `/[component]/[react|vue|svelte].astro` -\u003e Render component, with code preview\n- How to reduce code duplication?\n  - Create [layout](https://docs.astro.build/en/core-concepts/layouts)\n  - Codegen (Read components \u0026 create `.astro` filesstream)","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/TailwindCSS":{"title":"TailwindCSS","content":"\n[TailwindCSS](https://tailwindcss.com) is my favorite CSS framework right now. But for common elements like buttons or input forms I use [DaisyUI](https://daisyui.com) as a component framework which extends TailwindCSS to get the job done.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Test/test":{"title":"","content":"Test link to upper level pages like [Ideas](../Ideas.md) or another folders like ![KINGrinder](/Images/KINGrinder.png)","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/ThaiPBS-Podcast-EP14-Phoomparin-Mano":{"title":"ThaiPBS Podcast - EP14 Phoomparin Mano","content":"\n- Software Developer = Magician นักเวทย์มนต์\n- Curiosity leads to Problem solving\n- Minecraft\n- Hacking - Hack ดูข้อมูลอาจารย์ - แก้เกรด\n- Webshop : learn HTML\n- Self taught\n  - ตั้งเป้าหมายว่าอยากได้อะไร สร้างอะไร\n- Brikl\n- Communication Skill\n- Specialist\n- ค่ายกิจกรรม\n  - YCC\n  - Hackerhouse","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/The-only-2-kills-those-matter":{"title":"The only 2 kills those matter","content":"\nMaster these 2 meta-skills which will lead to learning everything faster.\n\n-   Input\n-   Output\n\nJust like Internet, the more bandwidth, the better it is. Here's why.\n\n## Improving Input\n\nThe more you read, the more you know. So if you can read faster than anyone, you'll learn anything faster. This also applies to listening with 2x speed. However, you have to understand or remember what you've read as well. I suggest [learning how to learn](https://www.coursera.org/learn/learning-how-to-learn) itself, and learn speed reading techniques to make you read 2-3 times faster than average.\n\n## Maximizing Output\n\nOutput means your result, to maximize the output means you push the process of getting the result to the limit. If you work with computers, typing fast or knowing application shortcut keys will make you complete more work that others who don't. There's no shortcut to success, but on the keyboard, there is. Furthermore, you'll get the feedback and learn to improve more quickly, too.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Twitch-PokDeng":{"title":"Twitch PokDeng","content":"\n- Active only when overlay is displayed `!pok activate` \n- Starting Phase\n  - 15-30 seconds\n  - !pok join [amount]\n    - Max bet amount \u003c= playerCoin / 5\n  - Max players: 16\n- Drawing Phase\n  - 15-30s\n  - Shuffle deck \u0026 give 2 cards to each player\n    - ~~Player sees only their own cards (Use whisper, if possible)~~ Non-verified bot maybe cannot use whisper\n  - If dealer Pok, show the hands, skip to Ending phase\n  - If player not Pok, can choose to hold, or draw 1 more card with `!pok draw`\n  - If dealer has less score (0-4) randomly draw 1 more card faced down\n- Ending Phase\n  - 15s\n  - Show dealer's hand\n  - Show status of each player (win, lose, deng)\n  - Collect/give payment\n  - Go back to starting phase again","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Typing-Practice-Drills-2020":{"title":"Typing Practice Drills (2020)","content":"\nThese are my typing practice drills. I tried to do it every day, 20-30 minutes per day.\n\n## Common words\n\nI like typing on [10ff](https://10fastfingers.com/) it's easy to use and I can use [custom CSS](https://github.com/narze/userscripts/tree/master/userstyles#styles) to force me to look a word ahead\n\n![10ff - Hide next word mode](https://github.com/narze/userscripts/raw/master/userstyles/10fastfingers-hidenextword.gif)\n\nI use 2 modes for practice\n\n-   200 words (60 seconds) [https://10fastfingers.com/typing-test/english](https://10fastfingers.com/typing-test/english)\n-   200 words (10 minutes) [https://10fastfingers.com/widget/typingtest?dur=600](https://10fastfingers.com/widget/typingtest?dur=600)\n    -   If I don't have time I'll skip this one\n\n## Article - Medium.com\n\nI like to read from medium.com, but if I type along I can get 2 birds with 1 stone. It's not fast but quite fun. Previously I will copy the text from it's article and type away in a text editor. But if I want to get typing stats I have to save it on [10ff text practice mode](https://10fastfingers.com/text-practice) or [Keyhero custom typing test](https://www.keyhero.com/custom-typing-test/)\n\nCaveats: Medium.com will convert quotes and dashes to a beautiful one that is not the same as on your keyboard, like `“”` or `—`. I used to replace them with Keyboard Maestro script. Now I'm developing a [Chrome extension](https://github.com/narze/article-scraper-web-extension) to scrape article and convert the text for me.\n\n![Chrome extension - Article Scraper](https://monosor.com/images/typing-practice-drills/article-scraper.jpg)\n\nIt took me 10-15 minutes for 5-min read article, so 1 Medium article and around 15 minutes of common words practice I will call it a day.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Untitled":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Untitled-1":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Untitled-1Untitled-1":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Untitled-2":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Untitled-3":{"title":"","content":"","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Use-Git-LFS-to-manage-large-files-in-Git-repository":{"title":"Use Git LFS to manage large files in Git repository","content":"\nI tried pushing a large file to GitHub and it gave the warning that I should use `Git LFS` to upload large files.\n\n[Git LFS](https://git-lfs.github.com/) (Large File Storage) is a Git extension which will replace large files with text pointer, and store the files separately on the storage. This makes the repo size relatively small, and can be cloned/pushed with faster speed since the Git history does not include the whole file.\n\nTo use Git LFS, simply install the extension.\n\n```shell\n# Mac\nbrew install git-lfs\n```\n\nThen setup the extension to GitHub user account.\n\n```shell\ngit lfs install\n```\n\nNext, in the repository, track the file with `track` subcommand.\n\n```shell\ngit lfs track \"*.psd\" # Track all PSD files\n```\n\nAfter running `track`, it will create `.gitattributes` files which store the lfs settings. Make sure to add it too.\n\n```shell\ngit add .gitattributes\n```\n\nThen commit, and push. You'll see the LFS upload progress.\n\n```text\nUploading LFS objects:  75% (3/4), 158 MB | 129 KB/s \n```\n\nIf you want to migrate existing file which is already tracked, use `migrate immport`. Warning : The command will overwrite the whole tree! See other options [here](https://github.com/git-lfs/git-lfs/blob/master/docs/man/git-lfs-migrate.1.ronn).\n\n```shell\ngit lfs migrate import --include-ref=main --include=\"*.psd\"\n```\n\n## Caveat\n\nGitHub has [limited LFS storage and bandwidth quota](https://docs.github.com/en/free-pro-team@latest/github/setting-up-and-managing-billing-and-payments-on-github/about-billing-for-git-large-file-storage) at 1GB.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Uses":{"title":"Uses","content":"\nEverything I use. Migrated from https://monosor.com/uses\n\n## Coding\n- [Dash](https://kapeli.com/dash) - Offline code \u0026 API documentation\n- [Kitty](https://sw.kovidgoyal.net/kitty)\n- [Fantasque Sans Mono](https://github.com/belluzj/fantasque-sans) ([Nerdfont patched](https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/FantasqueSansMono)) \u0026 [IBM Plex Sans Thai](https://github.com/IBM/plex/tree/master/IBM-Plex-Sans-Thai)\n- [Visual Studio Code](https://code.visualstudio.com) with [Aura Dark theme](https://github.com/daltonmenezes/aura-theme)\n\n## Languages \u0026 Frameworks\n- Svelte\n- Ruby \u0026 Ruby on Rails\n- Javascript \u0026 Node.js\n- TypeScript\n- React\n- Bootstrap\n- Tailwind CSS\n- Rust\n- Terraform\n\n## Command Line\n- [asdf](https://asdf-vm.com) to install \u0026 manage programming language versions (Ruby, Nodejs, Python, Go, etc.)\n- [Chezmoi](https://www.chezmoi.io)for my [Dotfiles](https://github.com/narze/dotfiles)\n- [Fish](https://fishshell.com) - Alternative command line shell than Zsh, I still use Zsh though.\n- [ghq](https://github.com/x-motemen/ghq) - Clone \u0026 access Git repos\n- [Homebrew](http://brew.sh) - macOS Package Manager\n- [Mackup](https://github.com/lra/mackup) - Backup \u0026 restore app configurations\n- [Mas](https://github.com/mas-cli/mas) - Install apps from Mac App Store\n- [Neovim](https://neovim.io) with [LunarVim](https://lunarvim.org)\n- [mpd](https://www.musicpd.org) with [ncmpcpp](https://rybczak.net/ncmpcpp) as music player\n- [tmux](https://github.com/tmux/tmux) with [tmuxinator](https://github.com/tmuxinator/tmuxinator)\n- [zoxide](https://github.com/ajeetdsouza/zoxide) - Jump around directories\n- [zsh4humans](https://github.com/romkatv/zsh4humans) - Zsh plugin manager \u0026 great plugins that works out of the box.\n\n## Apps \u0026 Utilities\n- [2Do](https://www.2doapp.com) - Todo app, available on Mac, iOS, Android.\n- [Alfred](https://www.alfredapp.com) - Replaces Spotlight\n- [Arq](https://www.arqbackup.com) - Backup files to Google Cloud Storage (Nearline)\n- [1password](https://1password.com)\n- [Karabiner Elements](https://github.com/pqrs-org/Karabi,ner-Elements) with [Goku](https://github.com/yqrashawn/GokuRakuJoudo) enables my [(S)uper(D)uper Mode](https://github.com/jasonrudolph/keyboard/#super-duper-mode) and Hyper Key\n- [Keyboard Maestro](https://www.keyboardmaestro.com) - Launch apps with Hyper Key\n- Web Browser\n\t- Google Chrome - Work\n\t- [Microsoft Edge](https://microsoftedge.microsoft.com) \u0026 [Opera GX](https://www.opera.com/gx) - Personal \n- [Obsidian](https://obsidian.md) - My current [Second Brain](/Second%20Brain.md) system\n- [Setapp](https://setapp.com) - App bundles, saved money since I already use tons of apps.\n  - [Bartender](https://setapp.com/apps/bartender) - Hide excessive menu bar icons\n  - [Sessions](https://setapp.com/apps/session) - Pomodoro timer\n- [Syncthing](https://syncthing.net) - Sync things.\n- [Hammerspoon](https://www.hammerspoon.org) - Windows management\n- [Tailscale](https://tailscale.com) - Private VPN for connecting to my NAS and listen to my music.\n\n## SaaS\n- [Vercel](https://vercel.com) - I have 30+ small projects hosted here.\n\n## Gadgets\n- MacBook M1 Pro 14\" 10/16 Cores 32GB Ram - Personal\n- MacBook Pro M1 (16GB RAM) - Work\n- [Ryzen Hackintosh](https://github.com/narze/hackintosh-rog-strix-b550i-gaming) - My last Hackintosh machine Ref. [Blog (Thai)](https://narze.medium.com/the-last-hackintosh-1-%E0%B9%80%E0%B8%A1%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%95%E0%B9%89%E0%B8%AD%E0%B8%87%E0%B9%80%E0%B8%A5%E0%B8%B7%E0%B8%AD%E0%B8%81%E0%B8%A3%E0%B8%B0%E0%B8%AB%E0%B8%A7%E0%B9%88%E0%B8%B2%E0%B8%87-ryzen-%E0%B8%81%E0%B8%B1%E0%B8%9A-m1-35807baccab8)\n- Mechanical Keyboards - Invest in something you use many hours a day.\n\t- [Planck Rev 6](https://drop.com/buy/planck-mechanical-keyboard)\n\t- [Lily58 Pro](https://keyhive.xyz/shop/lily58)\n\t- Keychron K12\n- [OnePlus 6T](http://oneplus.com)\n- [Zojirushi](https://www.zojirushi.com) Mugs \u0026 Tumblers\n- iPad with Apple Pencil\n- Full-size headphones with noise cancelling, I have [Sony MDR-1000X](https://www.sony.co.th/en/electronics/headband-headphones/mdr-1000x) \u0026 [Sony WH-1000XM4](https://www.sony.co.th/en/electronics/headband-headphones/wh-1000xm4)\n- [TicWatch Pro 4G/LTE](https://www.mobvoi.com/us/pages/ticwatchpro4g)\n- Twitch Magnetic USB Adapter \n\t- ![Twitch|200](/Images/Twitch_usb_adapter.png)\n- [Tigernu Backpacks](https://www.tigernustore.com). Good price \u0026 quality. I bought new models every 2-3 years.\n- [Boox Android eBook reader](https://www.amazon.com/BOOX-Nova-Pro-Reader-Android/dp/B07L95KPFM/ref=sr_1_2?keywords=boox+nova\u0026qid=1569171355\u0026s=electronics\u0026sr=1-2)\n- [Flents Ear Plugs](https://www.amazon.com/Flents-Quiet-Contour-Plugs-Pair/dp/B00IZCHYH2)\n- [Ostrich Pillow Light](https://ostrichpillow.com/products/ostrichpillow-light-reversible). Beware Chinese knockoffs.\n- [Moft Laptop \u0026 Phone Stand](https://www.moft.us)\n- Mouth Sticker - Saw [this video](https://www.youtube.com/watch?v=nl8LQrbMdqQ) and tried, this fix my dried mouth problem in the morning.\n- Xiaomi gadgets eg. Cleaner robot, vacuum cleaner, air purifier, IP camera.\n- [Hydro Flask 64oz.](https://www.hydroflask.com/64-oz-wide-mouth) with [Wide Mouth Straw Lid](https://www.hydroflask.com/wide-mouth-straw-lid)\n\n## Coffee\n- [Wacaco Picopresso](Wacaco%20Picopresso.md)\n- [Kingrinder K3](https://www.kingrinder.com)\n- [Timemore Black Mirror Basic+](https://en.timemore.com/taimochanpin/heijingdianzicheng/heijingbasicdianzicheng)\n\n## Previously used\n\naka. Honorable mentions, and why I don't use them anymore\n\n- iTerm : Tmux is slow, prompt layout breaks when resizing the window.\n- Ansible\n- Fira Code font : I just want the change of pace, this font is really good.\n- Sublime Text : On the later years (around the time of Atom editor), I got less and less updates. Then when I found that VSCode is fast enough, I moved.\n- Oh-My-Zsh : Everyone uses this, so mainstream.\n- [z](https://github.com/rupa/z) : Not [Rust](https://github.com/ajeetdsouza/zoxide)\n- Google Chrome\n- Evernote\n- Dropbox \u0026 Google Drive : It eats CPU / Ram usage\n- OnePlus 5 : I gave it to my brother\n- Amazfit Bip : I gave it to my father\n- [OmniFocus](https://www.omnigroup.com/omnifocus) - Switched to [2Do](https://www.2doapp.com) since it was simpler.\n- [Zinit](https://github.com/zdharma-continuum/zinit) - Switched to [zsh4humans](https://github.com/romkatv/zsh4humans)\n- [SynthWave '84](https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode) VSCode Theme\n- [Yabai](https://github.com/koekeishiya/yabai) (macOS tiling window manager) - Migrated to Hammerspoon since it's does not update for quite a while\n- [Baseus Magnetic USB Type-C Adapter](https://www.aliexpress.com/item/32924186463.html?spm=a2g0s.9042311.0.0.31684c4dQKyJRk). Replaced with Twitch USB Adapter\n- [Timing](https://setapp.com/apps/timing) - Time tracking app. It eats Gigabytes of space when I use it for 2-3 years.\n- [Time Out](https://setapp.com/apps/time-out) - Hooks with Sessions to block screen on Pomodoro breaks. I can control myself now to screen blocking is not necessary anymore.\n- [Notion](https://notion.so) - Too slow to use, and my current team switched to Jira.","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/VSCode-Extensions":{"title":"VSCode Extensions","content":"\n","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/VSCode-Shortcut-Keys":{"title":"VSCode Shortcut Keys","content":"\n(Some are default, some are defined by me)\n- `⌘K + B` - Toggle sidebar position (left - right)","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Vampire-Survivors":{"title":"Vampire Survivors","content":"\n# Weapon Evolution Combos\n\n**Here are all of the Vampire Survivors weapon evolution combos:**\n\n-   **Axe + Candelabrador** – Death Spiral\n-   **Cross + Clover** – Heaven Sword\n-   **Fire Wand + Spinach** – Hellfire\n-   **King Bible + Spellbinder** – Unholy Vespers\n-   **Knife + Bracer** – Thousand Edge\n-   **Magic Wand + Empty Tome** – Holy Wand\n-   **Whip + Hollow Heart** – Bloody Tear\n-   **Garlic + Pummarola** – Soul Eater\n-   **Santa Water + Attractorb** – La Borra\n-   **Peachone + Ebony Wings** – Vandalier (you can upgrade this once you get it)\n-   **Lightning Ring + Duplicator** – Thunder Loop\n-   **Song of Mana + Skull O’Maniac** – Mannajja\n- Pentagram + Crown","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Wacaco-Picopresso":{"title":"Wacaco Picopresso","content":"\nhttps://www.wacaco.com/pages/picopresso\n\n- Basket size is 52.5mm-\n- Can use Staresso SP-300 Tamper \u0026 Basket\n- If you are not sure about grind size, go coarser first, too fine coffee grounds will make the high pressure and will make the portafilter stuck and also do some damage to the piston [causing leaks](https://www.youtube.com/watch?v=LiLVYEMfyuo)\n- Disassembly fb thread https://www.facebook.com/groups/wacaco/posts/2701182226850147 (try with your own risk)","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Whats-Up-with-SvelteKit-with-Shawn-Wang-swyx":{"title":"What's Up with SvelteKit with Shawn Wang (swyx)","content":"\n\u003c!-- Generated by \u003ca href=\"https://www.yinote.co/#installation\"\u003eYiNote\u003c/a\u003e --\u003e\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/GNB-203yYc8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\n# [1.15 - What's Up With SvelteKit with Shawn Wang (swyx)](https://www.youtube.com/watch?v=GNB-203yYc8)\n\n  \n\n## [6:29](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=389)\n\n  \n\n\"Battery Included\"\n\n  \n\n## [7:08](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=428)\n\n  \n\n\"More happy \u0026 productive\"\n\n  \n\n## [7:55](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=475)\n\n  \n\nApple, Ikea hiring Svelte developers\n\n  \n\n## [9:03](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=543)\n\n  \n\nHTML Superset\n\n  \n\n## [12:02](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=722)\n\n  \n\nSvelte Actions\n\n  \n\n## [20:47](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=1247)\n\n  \n\nFull stack svelte course by Scott Tolinski\n\n  \n\n## [25:58](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=1558)\n\n  \n\nSvelte can be compiled to Web components\n\n  \n\n## [29:46](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=1786)\n\n  \n\nSapper \u0026 SvelteKit\n\n  \n\n## [41:39](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=2499)\n\n  \n\nThree.js journey\n\n  \n\n## [44:55](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=2695)\n\n  \n\nundraw.co\n\n  \n\n## [46:21](https://www.youtube.com/watch?v=GNB-203yYc8\u0026t=2781)\n\n  \n\nsw-yx/spark-joy","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/Wishlist":{"title":"Wishlist","content":"\n# Wishlist\n- Things to buy, it'll be moved to [Uses](Uses.md) if I bought it or [someone bought me](https://ko-fi.com/narze).\n\n## Coffee\n- [x] Manual Espresso Machine\n\t- [SuperKop](https://www.superkop.com)\n  \t- Thailand Reseller https://www.facebook.com/SuperkopThailand\n  \t- [Review](https://www.youtube.com/watch?v=4GavR71moBQ)\n  - [Cafelat Robot](http://www.cafelat.com/robot.html)\n\t\t- [FB Page (Thailand)](https://www.facebook.com/Robot-Coffee-Maker-Thailand-637831223352912/)\n\t\t- Easier 2-presses workflow than Flair 58 (maybe)\n\t\t\t- No Pre-heating required for Robot\n\t\t\t- Comparison review (vs Flair 58)\n\t\t\t\t- https://www.youtube.com/watch?v=iX4Ra5H5eUU\n\t- Wacaco Nanopresso\n\t\t- ![](/Images/Wacaco%20Nanopresso.png)\n\t- [[Wacaco Picopresso]]\n    - ![](Images/Wacaco%20Picopresso.png)\n\t- Cafflano Kompresso\n\t\t- ![](/Images/Cafflano%20Kompresso.png)\n\t- AeroPress + Fellow Prismo / [JoePresso](https://shopee.co.th/JOEPRESSO-for-Aeropress--%E0%B8%AA%E0%B8%B4%E0%B8%99%E0%B8%84%E0%B9%89%E0%B8%B2%E0%B8%84%E0%B8%B7%E0%B8%AD-Joepresso-%E0%B9%84%E0%B8%A1%E0%B9%88%E0%B8%A3%E0%B8%A7%E0%B8%A1-Aeropress--i.435273020.11065615380)\n  \t- https://www.youtube.com/watch?v=yDsOQMdVzpg\n  \t- https://www.youtube.com/watch?v=pU99E-zyzdw\n  \t- [YuroPress (Chinese Knockoff)](https://shopee.co.th/YuroPress-Coffeepress-Maker-%E0%B9%80%E0%B8%84%E0%B8%A3%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%87%E0%B8%97%E0%B8%B3%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B9%81%E0%B8%9A%E0%B8%9A-AeroPress-Prismo-i.260610709.9705817071)\n  - [x] Coffee Grinder\n\t\t- My [Delonghi KG79](https://www.delonghi.com/en-int/products/coffee/coffee-makers/grinders/kg79-0177111028) is not that good \u0026 hard to clean, I used it for Cold Brew.\n\t\t- Hand grinder\n\t\t\t- Kingrinder K2 (Grinds faster than C2 [ref](https://www.youtube.com/watch?v=0qBVp__SWwQ))\n\t\t\t\t- Kingrinder models  ![](../Images/KINGrinder.png)\n\t\t\t- Timemore C2\n\t\t\t- Comandante\n\t\t- Electric Grinder\n\t\t\t- Gemilai\n\t\t\t- Fellow Ode\n\t\t\t- Niche (30k+ THB :sadge:)\n\t- Accessories\n\t\t- Tamper\n\t\t- Cafelat Robot Mods\n\t\t- Digital Scale\n\t\t- Kettle\n\n## Tech\n- 144hz 4K Monitor\n- Better microphone with handle for streaming \u0026 video calls\n- Ouraring https://ouraring.com\n\t- Afflilated link from Snazzy Labs [https://ouraring.com?mct=LqjQ9l6P](https://www.youtube.com/redirect?event=video_description\u0026redir_token=QUFFLUhqa1pHZkpvQUFES3dUZTFZY2RqY0Rid3FaMWJvUXxBQ3Jtc0trczNmT2xUaS1Gb1Y3a0xKMGsxY1UxcXJqc2RVcktNODVLNER5TUZYeDRQd2JUTUR3SnVIai1ZZjJvNTc0NzR4MU1YQldNWjEtMF9oSm9BUVRMUWRlclNBVk5seHo1ejl0WGVMc2FWcE1KMEl3MGw0dw\u0026q=https%3A%2F%2Fouraring.com%3Fmct%3DLqjQ9l6P\u0026v=pQWGFKhBQwU) (Free 6-month membership)\n- VR Headset\n  - Oculus Quest 2 (Or newer one if released)\n- Pearl 40 https://pearlboards.net/collections/pearl-40/products/pearl-40?variant=40084713504900\n- [REAPER](https://www.reaper.fm)\n- Meebook P78 Pro - https://ereader.co.th\n- A mech keyboard with ZMK firmware support\n  - nice!60 https://nicekeyboards.com/nice-60 (has BLE)\n  - Planck rev6 (again??)\n\n## Misc\n- Sling bag\n  - Korideer\n  - 425 degree\n    - https://www.425degree.com/catalogsearch/result/?q=TOMTOC+URBAN+SLING+BAG+WITH+8-INCH\n    - [https://425.ee/35gd7Ft](https://425.ee/35gd7Ft?fbclid=IwAR0Xp8wusy1zUWLqHWoYBdUGc6F7blW71pAl372vx_f_5yiFzzPPpcRUUS0)\n- Steins;Gate Steam Bundle","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/_narzeLIVE-twitch-devlog":{"title":"","content":"\n\n…---\ntitle: \"narzeLIVE twitch devlog\"\n---\n\n## 2022-04-04\n- Deploy new streamie version to home-cluster\n- Prisma is broken since can't run `prisma migrate` on arm64 arch\n  - Can be built with Rust, but freaking slow\n  - Change Dockerfile `node:16-alpine` to `node:16-slim` and it works 🤯\n\n## 2022-04-05\n- Setup feed for `!gacha` \u0026 `!airdrop`\n\n## 2022-04-06\n- `!airdrop [n]`\n- Deploy feed overlay \u0026 angalung page (web)\n- Build docker image with `make build`\n\n## 2022-04-07\n- !give \n- !devmode -\u003e !pause \u0026 !unpause (quick solution)\n- !farm\n\n## 2022-04-08\n- Fix inconsistent !say connection\n- Add testing\n- !gacha with range -\u003e rename to !invest\n\n## 2022-04-09\n- Run socket.io server separately\n- Github Actions (build \u0026 push to ghcr.io)\n- Twitch Plays Patrick's Parabox (,w ,a ,s ,d)\n\n## 2022-04-10\n- Redis helm chart\n  - Bitnami's not working, use arm64v8/redis instead\n - Add `redis` package to Streamie\n - Replace `isPaused` with Redis key `streamie-dev-mode`\n - Dev Streamie to update `streamie-dev-mode` to `\"true\"`, then Production Streamie will stop responding to !commands, until quitting Dev Streamie will update to `\"false\"`\n\n## 2022-04-11\n- Setup vitest\n  - Found issues when mocking Prisma, use `vitest-mock-extended`\n- ~~Bits \u0026 Subs -\u003e $OULONG~~\n\n## 2022-04-15\n- Paperang x Streamie\n  - webusb\n  - `streamie/printer` package\n\n## 2022-04-17\n- Add print queue to printer\n- Add synced text page to  `streamie/web` to replace Stickies\n- Fix streamlarb (Error occurred randomly when opened VSCode before Streamlarb)\n\n## 2022-04-20\n- SvelteKit + Discord OAuth\n  - Problem : Refresh token not working on Vercel (It caches the page, but refreshes the token in background and not returning the cookie to the browser, so that the next refresh will force user to log out since old refresh token does not work anymore)\n  - Possible solutions : \n    - Client auth (Don't use hooks to set cookies)\n    - SWR\n    - Match the cache time with access token age\n\n## 2022-04-22\n- Discord - Twitch integration (Update user's twitchId \u0026 discordId)\n- Vite build time ENVs\n  - Took streamie docker image private\n  - Add dockerpulljson secret to cluster https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n\n## 2022-04-25\n- Make !place page public @ https://streamie-public.narze.live/pub/place\n  - Setup Tailwind JIT mode `mode: \"jit\"`\n  - #til JIT class does not work with number variables `h-[${height}px]` ❌\n\n## 2022-04-27\n- Raycast extension for Navidrome\n  - https://github.com/narze/raycast-navidrome\n  - Only \"Now Playing feature is working\"\n  - Cannot use MPRIS to control Sonixd yet since macOS does not have DBus supported natively\n\n## 2022-04-29\n- Apply grid layout for \"Code in the wind\" observer page https://github.com/showdownspace/codeinthewind-live/pull/1\n\n## 2022-05-02\n- Code in the wind example challenge : [https://play.tailwindcss.com/pOr3W1rA40?size=504x720](https://play.tailwindcss.com/pOr3W1rA40?size=504x720 \"https://play.tailwindcss.com/pOr3W1rA40?size=504x720\")\n- Install HAOS\n  - Cannot reach via WiFi, must use LAN initially\n\n## 2022-05-04\n- Install HAOS\n- Tips\n  - Enable `Advanced Mode ` in [Profile Page](http://homeassistant.local:8123/profile)\n  - Essential Add-ons (Except Letsencrypt)\n    - ![](Pasted%20image%2020220504231508.png)\n  - Backup before doing something risky \n\n## 2022-05-09\n- Code in the Wind - Example Challenge 2 https://citw01.pages.dev/example2\n  - https://play.tailwindcss.com/wSdPGj5xUk?size=540x720\n\n## 2022-05-11\n- Thwordle training mode (unlimited) https://thwordle.vercel.app/#/training\n\n## 2022-05-12\n- [Ophtusify](https://ophtusify.narze.live)\n\n## 2022-05-17\n- [Kuro - Credit Roll Renderer](https://github.com/narze/kuro)\n  - [Remotion](https://www.remotion.dev)\n\n## 2022-05-23\n- Streamlabs API + Socket API\n- TipMe Donation -\u003e Printer\n- #til install multiple versions of package\n  - \"socket.io-client\": \"^4.4.1\",\n     \"socket.io-client-v2\": \"npm:socket.io-client@v2-latest\"\n\n## 2022-05-30\n- Pomodoro Timer\n  - Start timer by clicking button \n  - or `!pomodoro` \n  - Timer runs for 25 minute\n    - Will be customizable later\n  - When timer ends, alert on overlay and starts 5 minute break\n\n## 2022-06-01\n- PDPApe 🐒  https://PDPApe.vercel.app ([Github](https://github.com/narze/PDPApe))\n```\nหนังสือให้ความยินยอมในการเก็บรวบรวม/ใช้/เปิดเผยข้อมูลส่วนบุคคล\n\n  ________ (\"บริษัท\") ให้ความสำคัญกับความเป็นส่วนตัวของท่าน บริษัทจึงขอความยินยอมจากท่านเพื่อการเก็บรวบรวม ใช้ และ/หรือเปิดเผยข้อมูลส่วนบุคคลของท่านที่ให้ไว้แก้บริษัทหรือที่บริษัทได้รับมาจากแหล่งอื่น สำหรับวัตถุประสงค์ดังต่อไปนี้\n\nข้าพเจ้ายินยอมกับการใช้ข้อมูลส่วนตัว ในวัตถุประสงค์ต่างๆ ดังนี้\n\n1. เพื่อเสนอผลิตภัณฑ์ และ/หรือ บริการของบริษัทที่เหมาะกับความต้องการของท่าน\n2. [โปรดระบุวัตถุประสงค์การประมวลผลข้อมูล]\n```\n\n## 2022-06-03\n- Pomodoro Overlay (cont.)\n\n## 2022-06-04\n- Try 25:5 pomodoro workflow on stream (Handcam)\n\n## 2022-06-06\n- ~~Golang~~ Keyboard Maestro HTTP service for invoking notification from other clients in VPN\n- Writes simple API to call macOS clients with Tailscale assigned URLs\n\n## 2022-06-08\n- !pomodoro post status change on twitch chat\n- !doing [message]\n- Registered Twitter Developer Program \n\n## 2022-06-10 \u0026 2022-06-12\n- Pokdeng overlay\n\n## 2022-06-13\n- Pokdeng overlay improvements\n  - [x] Debug mode toggle with keyboard and/or querystring\n    - `?debug=1`\n  - [x] Dealer draw 3rd card with rate `Math.random() \u003c (10 - score) / 10`\n  - [x] Text/bg color\n  - Fix player cards overflow on screen\n    - [ ] Add auto scroll on overflow\n  - [ ] Dealer's stat\n  - [ ] More chat messages (State change, more result)\n\n## 2022-06-15\n- [Anya Shirt Tracker](https://github.com/narze/anya-shirt-tracker)\n  - Track [Uniqlo TH](https://www.uniqlo.com/th/en/products/E451868-000?colorCode=COL41) for changes\n  - Use Playwright, node-cron-cli, Discord webhook\n\n## 2022-06-18\n- Random things\n  - Setup Remote SSH for Linux on DigitalOcean\n    - [ ] Fix Chezmoi gpg key does not work (key mismatched?)\n  - Basic Svelte talk preparation\n    - Web render\n      - Compiling svelte code is not basic task, maybe use API to save file \u0026 use vite to re-render the iframe?\n    - https://gitpkg.vercel.app \n      - `pnpm add https://gitpkg.now.sh/sveltejs/sites/package/repl`\n\n## 2022-06-20\n- Add tailwind to Astro `npx astro add tailwind`\n\n## 2022-06-22\n- Update styles to codegen, start adding components to Svelte Presentation\n- Github token for packages is expired (got denied error on image pull)\n  - Create new PAT `PAT=ghp_xxxxxxxxxxxxxxxx` (with read:packages)\n    - Login with docker to test `echo $PAT | docker login ghcr.io --username narze --password-stdin`\n  - `export AUTH=$(echo -n narze:$PAT | base64)\n  - `export DOCKERCONFIGJSON=$(echo -n '{\"auths\":{\"ghcr.io\":{\"auth\":\"'$AUTH'\"}}}' | base64)`\n  - `echo $DOCKERCONFIGJSON | pbcopy`\n  - Update secret-values.enc.yaml (with sops)\n\n## 2022-06-27\n- Try Meteor with Svelte\n  - `meteor mongo`: Runs mongo shell\n  - `$m:` reactive statement with Mongo https://github.com/zodern/melte#tracker-statements\n  - Mongo methods are not Promise based (all synchronous) :+1:\n  - Arrow function don't have `this` keyword\n\n## 2022-07-13\n- Installing `cert-manager` in home-cluster\n  - Better click \"+ New App\" on argocd UI then copy yaml output\n    - ![](Pasted%20image%2020220713215148.png) Error will be seen in UI if something went wrong \n  - Add namespace to destination in `argo-cd/values.yaml`\n  - Every argocd Application manifest must specify `namespace: argocd` or it won't work\n  - https://k3s.rocks\n ---\n\n## Ideas / Todo\n - [x] Queue !say\n - [x] Build streamie docker on Github Actions\n - [ ] SSL support for streamie-feed.narze.live \u0026 other domains\n - [ ] Argocd deployment alert on Discord\n - [x] !devmode bot to skip commands on production and use dev instead\n   - [x] !pause \u0026 !unpause (quick solution)\n - [x] !farm to get coin every 5min\n   - [x] Get more when live\n   - [ ] Subbers get more\n - [x] !give to give coin to other with 30% fee\n - [x] argo.home-cluster.narze.live\n - [ ] Youtube mediashare\n - [ ] 20 marbles game\n - [ ] Inactive burn rate\n - [ ] Resound redux\n - [ ] !wordle\n - [ ] Lumken : amඞgus mඞde\n - [ ] Show market cap in Twitch\n - [ ] Emotes\n - [ ] Telegram bot\n - [ ] Twitch bot\n   - [ ] Fix socket io not responding to !say\n   - [ ] !say support replies\n   - [ ] Command rate limit (5-10 seconds per command) use redis\n     - [ ] Rate limit by command\n   - [x] vitest\n   - [x] !farm when on live gets more than not live\n   - [x] Bit -\u003e 3$ / bit\n   - [x] Sub -\u003e 100$ + airdrop\n   - [x] Gift -\u003e 100$ + airdrop\n   - [ ] Store twitch user id\n   - [ ] !rename oldusername\n   - [ ] !marketcap\n   - [x] !place x y hex\n   - [x] !olf\n   - [ ] Twitch plays ...\n   - [x] !github\n   - [ ] Custom ! commands (like streamelements)\n- [ ] Discord\n  - [ ] Connect with twitch id\n- [x] Keyboard cam\n  - [ ] Bit to change kb with roulette\n- [ ] argocd-image-updater.readthedocs.io/en/stable\n- [x] Angalung layer for streamlabs (no click required)\n- [ ] !ask (GPT-3)\n- [x] Try remotion\n- [ ] RasPi Zero 2 W + Paperang\n  - [ ] Needs PoC on Pi4 first\n- [ ] Raycast + http://www.subsonic.org/pages/api.jsp#setRating (Mini player **MPRIS** + Star rating shortcut) \n  - [ ] https://developers.raycast.com/basics/create-your-first-extension\n  - [ ] Demo https://demo.navidrome.org/rest/ping.view?u=demo\u0026v=1.16.1\u0026c=myapp\u0026p=demo\u0026f=json\n- [ ] HabitsGarden clone with weighted score\n- [x] showdown.space - Code in the wind viewer\n- [ ] Smart home system - HomeAssistant\n  - [x] Initial setup\n  - [ ] Setup Let's Encrypt / Cloudflare Tunnel\n    - https://github.com/PanJ/hassio-addons\n    - https://github.com/w35l3y/hassio-addons/tree/main/cloudflare_tunnel\n    - https://github.com/brenner-tobias/addon-cloudflared\n  - [ ] Setup Google Assistant https://www.home-assistant.io/integrations/google_assistant (Requires SSL)\n  - [ ] Track Phone location as entity\n  - [ ] Install Homebridge on home-cluster\n  - [ ] Roborock integration\n  - [ ] QNAP https://www.home-assistant.io/integrations/qnap/\n- [ ] Generate m3u, m3u8 from list of files\n  - https://itsfoss.com/create-m3u-playlist-linux/ \n  - `\\ls -1v **/*.{flac,mp3,ogg,opus} \u003e playlist.m3u`\n  - `[/share/homes/admin/music/...] # find * -type f \\( -iname '*.flac' -o -iname '*.mp3' -o -iname '*.ogg' -o -iname '*.opus' \\) \u003e playlist.m3u8`\n- [x] Enable HTTPS in Tailscale https://tailscale.com/kb/1153/enabling-https\n  - [ ] `*.risk-in.ts.net` \n  - [ ] [[Adding Tailscale to Rails App]]\n- [ ] Portfolio website\n  - [ ] port.narze.live\n- [ ] Sidebar overlay\n  - [ ] width 320 , max height 1080\n- [ ] Delayed read\n- [ ] Speech to text to speech (Speak -\u003e !say)\n- [ ] Try meteor + svelte\n- [ ] Pomodoro timer\n  - [ ] Alert on macbook screen somehow (On screen / mac notification / etc.)\n- [ ] Keyboard keystroke sound simulator\n- [ ] `brew install --cask manoonchai`\n- [ ] Bot reply on !pomodoro commands\n- [ ] Try Google Cloud Run\n- [ ] `!doing` changes text on overlay\n- [ ] Mediashare with $OULONG\n- [ ] utilize vdo.ninja\n- [ ] `!project / !today`\n- [ ] Dotfiles on ubuntu\n- [ ] Re-structure yabai with rules\n  - Ref. https://github.com/peppy/dotfiles/blob/master/.yabairc\n","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/asdf-The-Ultimate-Version-Manager":{"title":"asdf - The Ultimate Version Manager","content":"\nDue to the differences of the dependencies of your projects (and others on GitHub.) Now it's pretty normal to have multiple versions of programming languages like Python, Node.js, or even PHP, installed on your system. There're some tools like `pyenv`, `rbenv`, `nvm`, and many more, but most of them can work with only one language per tool, so you have to remember all of their commands if you work on multiple languages.\n\nEnter [`asdf`][https://asdf-vm.com], the universal version manager which works with most languages, and even cover some tools like [Vim][asdf-vim]!\n\nSince `asdf` is just a shell script with extensible plugin system. Installation is strightforward, [follow the instructions][install] to install it to the system. eg. If you use macOS:\n\n```shell\nbrew install coreutils curl git # Dependencies\nbrew install asdf\n```\n\nDon't forget to add `asdf` to your shell.\n\n```shell\n# zsh\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" \u003e\u003e ~/.zshrc\n\n# bash\necho -e \"\\n. $(brew --prefix asdf)/asdf.sh\" \u003e\u003e ~/.bash_profile\n\n# fish\necho -e \"\\nsource \"(brew --prefix asdf)\"/asdf.fish\" \u003e\u003e ~/.config/fish/config.fish\n```\n\nRestart the shell. Now you're ready to add plugins! Firstly, list all the plugins.\n\n```shell\nasdf plugin list all\n\n# You'll see something like this\n...\nripgrep                       https://gitlab.com/wt0f/asdf-ripgrep.git\nrke                           https://github.com/particledecay/asdf-rke.git\nrlwrap                        https://github.com/asdf-community/asdf-rlwrap.git\nruby                         *https://github.com/asdf-vm/asdf-ruby.git\nrust                         *https://github.com/code-lever/asdf-rust.git\nsaml2aws                      https://github.com/elementalvoid/asdf-saml2aws.git\nsbcl                          https://github.com/smashedtoatoms/asdf-sbcl.git\nsbt                           https://github.com/bram2000/asdf-sbt.git\nscala                         https://github.com/mtatheonly/asdf-scala.git\nscenery                       https://github.com/skyzyx/asdf-scenery.git\n...\n```\n\nI want to use [Rust][rust-for-rubyist]! So add Rust plugin.\n\n```shell\nasdf plugin add rust\n```\n\nThen, list all Rust versions.\n\n```shell\nasdf list all rust # or asdf latest rust to get only latest version\n\n# Output\n...\n1.43.1\n1.44.0\n1.44.1\n1.45.0\n1.45.1\n1.45.2\n1.46.0\n1.47.0\n```\n\nChoose the version and install it.\n\n```shell\nasdf install rust 1.47.0\n```\n\nSet the version and you're done!\n\n```shell\n# Local (will create .tool-versions in current directory)\nasdf local rust 1.47.0\n\n# Global (will create ~/.tool-versions)\nasdf global rust 1.47.0\n\n# Shell (Set the version to current shell session)\nasdf shell rust 1.47.0\n```\n\nSometimes after installing new version or other command line executables which uses languages in asdf, you must run `reshim` once to recreate shims and make the executables working.\n\n```shell\nasdf reshim [language]\n```\n\nNote: Some languages (like [Node.js][asdf-nodejs]) has some requirements before install. So you should look on the plugin's homepage before installing any plugins for the first time.\n\n[asdf]: https://asdf-vm.com\n[asdf-vim]: https://github.com/tsuyoshicho/asdf-vim\n[install]: https://asdf-vm.com/#/core-manage-asdf\n[rust-for-rubyist]: /rust-for-rubyist\n[asdf-nodejs]: https://github.com/asdf-vm/asdf-nodejs#install","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/deploydeemai.today":{"title":"deploydeemai.today","content":"\n# deploydeemai.today\n\n","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null},"/ghq":{"title":"ghq","content":"\nIn all of my 3 Macs, I store all of my code within `~/Code` to make it persistent and easy to use across the machines. I use [`ghq`](https://github.com/x-motemen/ghq) to manage the inner structure.\n\nTo use `ghq`, simply run it anywhere in the terminal with your desired Github repository `user/repo` eg.\n\n```shell\n$ ghq get narze/thank-u-next-js\n```\n\nIf the code is not on your machine yet. The command will clone [narze/thank-u-next-js](https://github.com/narze/thank-u-next-js) to `~/Code/github.com/narze/thank-u-nextjs`. (Default root path is `~/ghq` but you can override it in your [gitconfig](https://github.com/narze/dotfiles/blob/master/etc/gitconfig#L12).)\n\nI make a [command line alias](https://monosor.com/command-line-aliases) and add `-l` parameter (`look`) to change the path after cloning, and `-p` to clone with SSH url for using with private Github repositories.\n\n```shell\nalias gq='ghq get -l -p'\n```\n\n\tSo, for instance, I can just type `gq narze/narze.github.io` in a new terminal session and start writing articles right away","lastmodified":"2022-08-21T10:49:56.657160714Z","tags":null}}